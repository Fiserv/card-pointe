################################################################################
# Copyrights Â© 2021-2022 Fiserv, Inc. or its affiliates.
# Fiserv is a trademark of Fiserv, Inc.,
# registered or used in the United States and foreign countries,
# and may or may not be registered in your country.
# All trademarks, service marks,
# and trade names referenced in this
# material are the property of their
# respective owners. This work, including its contents
# and programming, is confidential and its use
# is strictly limited. This work is furnished only
# for use by duly authorized licensees of Fiserv, Inc.
# or its affiliates, and their designated agents
# or employees responsible for installation or
# operation of the products. Any other use,
# duplication, or dissemination without the
# prior written consent of Fiserv, Inc.
# or its affiliates is strictly prohibited.
# Except as specified by the agreement under
# which the materials are furnished, Fiserv, Inc.
# and its affiliates do not accept any liabilities
# with respect to the information contained herein
# and are not responsible for any direct, indirect,
# special, consequential or exemplary damages
# resulting from the use of this information.
# No warranties, either express or implied,
# are granted or extended by this work or
# the delivery of this work
################################################################################

openapi: 3.0.2
info:
  title: CoPilot API Service Endpoints
  description: This API documentation provides technical guidance when utilizing CoPilot.
  version: 1.0.0
servers:
 - {url: 'DNE', description: Production}
 - {url: 'DNE', description: Sandbox}
paths:
  /auth/realms/cardconnect/protocol/openid-connect/token:
    post: 
      tags:
        - token Endpoint Definition
      x-group-name: CoPilot
      x-proxy-name: token
      x-default-example: PaymentCard
      summary: To authenticate any request to the CoPilot API, you must first request an access token using the Token endpoint. The Token endpoint requires CoPilot user account credentials, and returns the access token you will use to make API requests during a session.
      description: |+
        To authenticate any request to the CoPilot API, you must first request an access token using the Token endpoint. The Token endpoint requires CoPilot user account credentials, and returns the access token you will use to make API requests during a session.

        The access token is valid for a limited timeframe, indicated by the expires_in value (in seconds). Once a token has expired, you must request a new token.

        Supply the access_token value in the Authorization header of your subsequent API calls, using the Bearer Authentication scheme as shown below.

        <code>Authorization: Bearer <access_token></code>
        
        **Important Security Considerations**:
        
        * The provided client_secret is a secret and should never be exposed on the client side via JavaScript. Ensure that the client secret is stored securely in your application.
        * Do not expose the access_token or refresh_token in client-side applications.
        * Create a dedicated CoPilot user account for authenticating your CoPilot API requests, and do not use this account to access the CoPilot web application. Using this account to access the CoPilot web application will initiate the two-factor authentication (2FA) requirement for this account, preventing the authentication of your API requests until the 2FA requirement is satisfied.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tokenRequest'
      parameters:
        - {$ref: '#/components/parameters/ContentTypeHeader'}
      responses:
        200: 
          description: Success
          content:
            application/json:
              schema: {$ref: '#/components/schemas/tokenResponse'}
        400:
          description: Not Found
          content:
            application/json:
              schema: {$ref: '#/components/schemas/NotFoundError'}
        404:
          description: Bad Request
          content:  
            application/json:
              schema: {$ref: '#/components/schemas/BadRequestError'}

  /auth/realms/cardconnect/protocol/openid-connect/merchant:
    post: 
      tags:
        - merchant Endpoint Definition
      x-group-name: CoPilot
      x-proxy-name: merchant (CREATE)
      x-default-example: PaymentCard
      summary: The Merchant endpoint is used primarily to create a new merchant account in CoPilot, using a pre-existing application template that has been created in the CoPilot web interface.
      description: |+
        The Merchant endpoint is used primarily to create a new merchant account in CoPilot, using a pre-existing application template that has been created in the CoPilot web interface.
        Once the merchant account has been created, additional boarding operations can be performed, such as:

        Ordering equipment for the account
        Uploading attachments that the merchant has completed and signed
        Requesting a digital signature from the merchant, allowing them to review and sign the application using their web browser
        Use the POST method to create a new merchant account using a pre-existing application template that has been created in the CoPilot web interface. A successful request returns the merchantId property, which is used to identify the account within CoPilot and is used in subsequent API calls for additional boarding operations.
        The code example to the right is not representative of a legitimate request as it includes all possible fields, including those that would generate a conflict when creating a merchant.

        See the CoPilot Developer Guides to learn about the minimum data requirements and process of creating a new merchant.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tokenRequest'
      parameters:
        - {$ref: '#/components/parameters/ContentTypeHeader'}
      responses:
        200: 
          description: Success
          content:
            application/json:
              schema: {$ref: '#/components/schemas/tokenResponse'}
        400:
          description: Not Found
          content:
            application/json:
              schema: {$ref: '#/components/schemas/NotFoundError'}
        404:
          description: Bad Request
          content:  
            application/json:
              schema: {$ref: '#/components/schemas/BadRequestError'}

components:
  schemas:
    merchantRequest:
      x-model-version: 1.0
      description: merchant Request
      properties:
        templateId:
          $ref: '#/components/schemas/templateId'
        merchant:
          $ref: '#/components/schemas/merchant'
        OwnerSiteUser:
          $ref: '#/components/schemas/OwnerSiteUser'
    templateId:
      description: The ID of the application template created within the CoPilot web interface.
      type: integer
      maxLength: 19
      example: 999
    merchant:
      type: array
      items:
        properties:
          salesCodes:
            $ref: '#/components/schemas/salesCode'
          akaBusinessName:
            $ref: '#/components/schemas/akaBusinessName'
          dbaName:
            $ref: '#/components/schemas/dbaName'
          legalBusinessName:
            $ref: '#/components/schemas/legalBusinessName'
          taxFilingName:
            $ref: '#/components/schemas/taxFilingName'
          taxFilingMethod:
            $ref: '#/components/schemas/taxFilingMethod'
          businessStartDate:
            $ref: '#/components/schemas/businessStartDate'
          businessIdTypeCd:
            $ref: '#/components/schemas/businessIdTypeCd'
          custPrimaryAcctFlg:
            $ref: '#/components/schemas/custPrimaryAcctFlg'
          webLeadFlg:
            $ref: '#/components/schemas/webLeadFlg'
          hierarchy:
            $ref: '#/components/schemas/hierarchy'
          demographic:
            $ref: '#/components/schemas/demographic'
          ownership:
            $ref: '#/components/schemas/ownership'
          bankDetail:
            $ref: '#/components/schemas/bankDetail'
          merchantContactInfo:
            $ref: '#/components/schemas/merchantContactInfo'
          processing:
            $ref: '#/components/schemas/processing'
          pricing:
            $ref: '#/components/schemas/pricing'
          fees:
            $ref: '#/components/schemas/fees'
          cloverSecurityAndTrasarmor:
            $ref: '#/components/schemas/cloverSecurityandTransarmor'
          customFields:
            $ref: '#/components/schemas/customFields'
    ownership:
      type: array 
      items:
        properties:
          owner:
            $ref: '#/components/schemas/owner'
          additionalOwners:
            $ref: '#/components/schemas/additionalOwners'
          ownershipTypeCd:
            $ref: '#/components/schemas/ownershipTypeCd'
          publiclyTradedFlag:
            $ref: '#/components/schemas/publiclyTradedFlag'
          stockSymbol:
            $ref: '#/components/schemas/stockSymbol'
          driversLicenseNumber:
            $ref: '#/components/schemas/driversLicenseNumber'
          ownerOwnershipPct:
            $ref: '#/components/schemas/ownerOwnerrshipPct'
    salesCode:
      type: string
      maxLength: 25
      description: The Sales Code created within the CoPilot web interface that is applicable for this merchant account.
      example: API1
    akaBusinessName:
      type: string
      example: The Card Shoppe
      description: The 'Also Known As' business name, such as an informal or shorthand moniker of the legal or DBA name.
      maxLength: 200
    dbaName: 
      type: string
      maxLength: 100
      example: The Card Shoppe
      description: The 'Doing Business As' name, sometimes referred to as the 'Fictitious Business Name' or 'Assumed Business Name' that is legally registered.
    legalBusinessName:
      type: string
      maxLength: 500
      description: The full legal name of the registered business.
      example: The Card Shoppe LLC
    taxFilingName:
      type: string
      maxLength: 500
      example: The Card Shoppe LLC
      description: "The business name used in tax filing. Include only the following special characters: &, -"
    taxFilingMethod: 
      description: The method used to identify the business for tax filing. Can be either EIN or SSN. Only the SSN method is possible when merchant.ownership.ownershipType is INDIVSOLE.
      maxLength: 3
      type: string
      example: EIN
    businessStartDate:
      type: string
      maxLength: 10
      description: The business inception date, formatted as MM/DD/YYYY.
      example: 09/17/1949
    businessIdTypeCd:
      type: string
      maxLength: 7
      description: The business identification type code, used to verify the business. Can be either ARTICLE or GOVT.
      example: ARTICLE
    custPrimaryAcctFlg:
      type: boolean
      description: True when the account is considered the primary account among linked MIDs.
      example: false
    webLeadFlg:
      type: boolean
      description: True when this merchant account is created as the result of an unsolicited merchant inquiry using a hosted web form or a similar lead generation strategy.
      example: true
    hierarchy:
      type: array
      description: The hierarchy object, containing custom hierarchy information for this merchant.
      items:
        properties:
          corpLevel:
            $ref: '#/components/schemas/corpLevel'
          chainLevel:
            $ref: '#/components/schemas/chainLevel'
          sponsorBankCd:
            $ref: '#/components/schemas/sponsorBankCd'
    corpLevel:
      maxLength: 12
      type: string
      description: The Corporate Chain used to associate merchant accounts.
      example: 000000000001
    chainLevel:
      maxLength: 12
      type: string
      description: The Chain Level used to link merchant accounts for reporting, statement, or financial rollup.
      example: 000000000002
    sponsorBankCd:
      maxLength: 5
      type: string
      description: The Sponsor Bank code for merchant accounts using the FD North backend. Enter WELLS for Wells Fargo or BBVA for BBVA.
      example: WELLS
    demographic: 
      type: array
      description: The demographic object, containing business information.
      items:
        properties:
          businessIncorporatedStateCd:
            $ref: '#/components/schemas/businessIncorporatedStateCd'
          merchantTimeZone:
            $ref: '#/components/schemas/merchantTimeZone'
          websiteAddress:
            $ref: '#/components/schemas/websiteAddress'
          businessPhone:
            $ref: '#/components/schemas/businessPhone'
          businessFax:
            $ref: '#/components/schemas/businessFax'
          businessAddress:
            $ref: '#/components/schemas/businessAddress'
          mailingAddress:
            $ref: '#/components/schemas/mailingAddress'
    businessIncorporatedStateCd:
      maxLength: 2
      type: string
      description: The state code where the business is incorporated.
      example: CO
    merchantTimeZone:
      maxLength: 3
      type: string
      description: The 2 or 3 character time zone such as ET, CT, MT, PT, or HST.
      example: MT
    websiteAddress:
      maxLength: 200
      description: Business website is required if merchant.processing.modeOfTransaction.eCommercePct is greater than 0.
      type: string
      example: www.example.com
    businessPhone:
      maxLength: 12
      type: string
      description: The business phone number formatted as "###-###-####".
      example: 123-456-7890
    businessFax:
      maxLength: 12
      type: string
      description: The business fax number formatted as "###-###-####".
      example: 098-765-4321
    businessAddress:
      description: The address object containing the business address
      $ref: '#/components/schemas/address'
    mailingAddress:
      description: The address object containing the business mailing address
      $ref: '#/components/schemas/address'
    address:
      type: array
      items:
        properties:
          address1:
            $ref: '#/components/schemas/address1'
          address2:
            $ref: '#/components/schemas/address2'
          city: 
            $ref: '#/components/schemas/city'
          stateCd:
            $ref: '#/components/schemas/stateCd'
          zip:
            $ref: '#/components/schemas/zip'
          countryCd:
            $ref: '#/components/schemas/countryCd'
    address1:
      type: string
      maxLength: 200
      example: 123 Fake St
      description: The number and street of the address.
    address2: 
      type: string
      maxLength: 200
      example: Suite 300
      description: Any additional address information such as apartment number or suite number of the address.
    city: 
      type: string
      maxLength: 300
      description: The city associated with the address
      example: Keystone
    stateCd:
      type: string
      maxLength: 2
      description: The state code that represents the US state where the address is located.
      example: CO
    zip:
      description: The ZIP code of the address.
      maxLength: 15
      type: string
      example: 90435
    countryCd:
      description: The country code that represents the country associated with the address.
      example: US
      type: string
      maxLength: 2
    tokenResponse:
      x-model-version: 1.0
      description: token Response
      properties:
        access_token:
          $ref: '#/components/schemas/access_token'
        expires_in:
          $ref: '#/components/schemas/expires_in'
        refresh_expires_in:
          $ref: '#/components/schemas/refresh_expires_in'
        refresh_token:
          $ref: '#/components/schemas/refresh_token'
        token_type:
          $ref: '#/components/schemas/token_type'
        not-before-policy:
          $ref: '#/components/schemas/not-before-policy'
        session_state:
          $ref: '#/components/schemas/session_state'
        scope:
          $ref: '#/components/schemas/scope'
    access_token:
      type: string
      description: The access token value to be used with the Bearer Authentication scheme for subsequent calls to the API.
      example: eyJhbGciOiJSUzI1NiIsInR5cCIgOiAiSldUIiwia2lkIiA6ICIzNDZZVkUwaGJXQlVvT1NoMm5wOHF4d2NuZ2tKUjY1Uzh3SVM2UmI5X3N3In0
    expires_in: 
      description: The number of seconds until the access token is no longer valid.
      type: integer
      example: 300
    refresh_expires_in:
      description: The number of seconds until the refresh token is no longer valid.
      type: integer
      example: 600
    refresh_token:
      description: The refresh token used to request a new access token.
      type: string
      example: eyJhbGciOiJSUzI1NiIsInR5cCIgOiAiSldUIiwia2lkIiA6ICIzNDZZVkUwaGJXQlVvT1NoMm5wOHF4d2NuZ2tKUjY1Uzh3SVM2UmI5X3N3In0
    token_type: 
      description: The type of token provided. A successful request returns a bearer token.
      type: string
      example: bearer
    not-before-policy:
      description: When applicable, restricts authentication prior to the timestamp value.
      type: integer
      example: 1498510947
    session_state:
      description: The session state string.
      type: string
      example: cc11af22-1231-483b-b04d-5ff21201348f
    scope:
      description: The scope of use for the token, based on the user that initiated the request.
      example: isv
      type: string
    tokenRequest:
      x-model-version: 1.0
      description: token Request
      properties:
        username:
          $ref: '#/components/schemas/username'
        password:
          $ref: '#/components/schemas/password'
        grant_type:
          $ref: '#/components/schemas/grant_type'
        client_id:
          $ref: '#/components/schemas/client_id'
        client_secret:
          $ref: '#/components/schemas/client_secret'
    username:
      type: string
      description: The username for the CoPilot user account used to authenticate your API requests.
      example: user123
    password:
      type: string
      description: The password for the CoPilot user account used to authenticate your API requests.
      example: password
    grant_type:
      type: string
      example: password
    client_id:
      type: string
      example: merchapi
    client_secret:
      type: string
      description: CoPilot API registration is required in order to receive your client_secret.
    NotFoundError:
      x-model-version: 1.0
      description: Error information
      properties:
        message: {
          description: 'Information specific to a propery or attribute.',
          type: string,
          example: Data not found
        }
        errorcode: {
          description: 'Error response code from the gateway',
          type: integer,
          example: 49
        }
    BadRequestError:
      x-model-version: 1.0
      description: Error information
      properties:
        message: {
          description: 'Information specific to a propery or attribute.',
          type: string,
          example: Keystore invalid processor
        }
        errorcode: {
          description: 'Error response code from the gateway',
          type: integer,
          example: 65
        }
    ErrorCode: 
      description: An error code. Returns "00" if successful. All error codes contain four digits. Two zeros precede the codes.
      properties:
        code:
          description: An error code that shows the importance of error codes.
          type: integer
    Error:
      x-model-version: 1.0
      description: Error information
      properties:
        type:
          description: 'The type of response either from the HOST, GATEWAY, NETWORK, or APIM.'
          type: string
        code: {
          description: 'Error response code from the host, gateway, or network',
          type: string
        }
        message: {
          description: 'Information specific to a propery or attribute.',
          type: string
        }
  responses:
    WrongVersion:
      x-model-version: 1.0
      description: Wrong version number
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    InvalidAction:
      x-model-version: 1.0
      description: Invalid action
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    DataNotDecimal:
      x-model-version: 1.0
      description: Data is not decimal digits
      content:
        application/JSON:
          schema:
            $ref: '#/components/schemas/Error'
    KeyIDNotFound:
      x-model-version: 1.0
      description: Key ID is not found
      content:
        application/JSON:
          schema:
            $ref: '#/components/schemas/Error'
    DataTooLong:
      x-model-version: 1.0
      description: Data is too long
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    DataEmpty:
      x-model-version: 1.0
      description: Data is empty
      content:
        application/JSON:
          schema:
            $ref: '#/components/schemas/Error'
    UnknownAlgo:
      x-model-version: 1.0
      description: Unknown Algorithm
      content:
        application/JSON:
          schema:
            $ref: '#/components/schemas/Error'
    EncryptionFailure:
      x-model-version: 1.0
      description: Encryption Failure
      content:
        application/JSON:
          schema:
            $ref: '#/components/schemas/Error'
    Base64Failure:
      x-model-version: 1.0
      description: Base 64 decode failure
      content:
        application/JSON:
          schema:
            $ref: '#/components/schemas/Error'
    CryptoWrongLength:
      x-model-version: 1.0
      description: Crypto data is the wrong length
      content:
        application/JSON:
          schema:
            $ref: '#/components/schemas/Error'
    DataTooShort:
      x-model-version: 1.0
      description: Data is too short
      content:
        application/JSON:
          schema:
            $ref: '#/components/schemas/Error'
    CCNWrongLength:
      x-model-version: 1.0
      description: CCN wrong length on decryption
      content:
        application/JSON:
          schema:
            $ref: '#/components/schemas/Error'
    DecryptionFailure:
      x-model-version: 1.0
      description: Decryption Failure
      content:
        application/JSON:
          schema:
            $ref: '#/components/schemas/Error'
    BadPadding:
      x-model-version: 1.0
      description: Bad PKCS 5 padding
      content:
        application/JSON:
          schema:
            $ref: '#/components/schemas/Error'
    BadDecrypt:
      description: Bad decryption length field
    KeystoreNotInit:
      description: Keystore not initialized
    ApplicationNotInit:
      x-model-version: 1.0
      description: Application not initialized
      content:
        application/JSON:
          schema:
            $ref: '#/components/schemas/Error'
    BufferTooShort:
      x-model-version: 1.0
      description: Buffer too short
      content:
        application/JSON:
          schema:
            $ref: '#/components/schemas/Error'
    IllegalCharacter:
      x-model-version: 1.0
      description: Illegal characters
      content:
        application/JSON:
          schema:
            $ref: '#/components/schemas/Error'
    WrongLength:
      x-model-version: 1.0
      description: Wrong message length
      content:
        application/JSON:
          schema:
            $ref: '#/components/schemas/Error'
    ServerFailed:
      x-model-version: 1.0
      description: Server failed
      content:
        application/JSON:
          schema:
            $ref: '#/components/schemas/Error'
    ConfigItemBad:
      x-model-version: 1.0
      description: Config item is bad
      content:
        application/JSON:
          schema:
            $ref: '#/components/schemas/Error'
    TokenDataProb:
      x-model-version: 1.0
      description: Token database problem
      content:
        application/JSON:
          schema:
            $ref: '#/components/schemas/Error'
    UnAuthHost:
      x-model-version: 1.0
      description: Unauthorized host
      content:
        application/JSON:
          schema:
            $ref: '#/components/schemas/Error'
    TokenPurged:
      x-model-version: 1.0
      description: Token Purged
      content:
        application/JSON:
          schema:
            $ref: '#/components/schemas/Error'
    DataNotFound:
      x-model-version: 1.0
      description: Data not found
      content:
        application/JSON:
          schema:
            $ref: '#/components/schemas/Error'
    ErrorHashing:
      x-model-version: 1.0
      description: Error hashing the value
      content:
        application/JSON:
          schema:
            $ref: '#/components/schemas/Error'
    TokenDuplicate:
      x-model-version: 1.0
      description: Token or data duplicate
      content:
        application/JSON:
          schema:
            $ref: '#/components/schemas/Error'
    LuhnFailure:
      x-model-version: 1.0
      description: Card number check (Luhn formula) failed
      content:
        application/JSON:
          schema:
            $ref: '#/components/schemas/Error'
    MissingSiteName:
      x-model-version: 1.0
      description: Missing or unknown site name
      content:
        application/JSON:
          schema:
            $ref: '#/components/schemas/Error'
    TokenFormatBad:
      x-model-version: 1.0
      description: Token format is bad
      content:
        application/JSON:
          schema:
            $ref: '#/components/schemas/Error'
    RequestSignatureInvalid:
      x-model-version: 1.0
      description: Request signature is bad
      content:
        application/JSON:
          schema:
            $ref: '#/components/schemas/Error'
    RequestSignatureExpired:
      x-model-version: 1.0
      description: Request signature timestamp expired
      content:
        application/JSON:
          schema:
            $ref: '#/components/schemas/Error'
    RequestSignatureMismatch:
      x-model-version: 1.0
      description: Request signature mismatch
      content:
        application/JSON:
          schema:
            $ref: '#/components/schemas/Error'
    RequestSignatureFailure:
      x-model-version: 1.0
      description: Request signature failure
      content:
        application/JSON:
          schema:
            $ref: '#/components/schemas/Error'
    PINTranslationFail:
      x-model-version: 1.0
      description: PIN translation fail
      content:
        application/JSON:
          schema:
            $ref: '#/components/schemas/Error'
    KeystoreImportFail:
      x-model-version: 1.0
      description: Keystore import failure
      content:
        application/JSON:
          schema:
            $ref: '#/components/schemas/Error'
    KeystoreUserstoreFail:
      x-model-version: 1.0
      description: Keystore userstore failure
      content:
        application/JSON:
          schema:
            $ref: '#/components/schemas/Error'
    KeystoreInvalidProc:
      x-model-version: 1.0
      description: Keystore invalid processor
      content:
        application/JSON:
          schema:
            $ref: '#/components/schemas/Error'
    UnauthTerminal:
      x-model-version: 1.0
      description: Unauthorized terminal
      content:
        application/JSON:
          schema:
            $ref: '#/components/schemas/Error'
    KeystoreRollbackFail:
      x-model-version: 1.0
      description: Keystore rollback failure
      content:
        application/JSON:
          schema:
            $ref: '#/components/schemas/Error'
    UnauthDecrypt:
      x-model-version: 1.0
      description: Unauthorized decrypt
      content:
        application/JSON:
          schema:
            $ref: '#/components/schemas/Error'
    InvalidEMVData:
      x-model-version: 1.0
      description: Invalid EMV tag data
      content:
        application/JSON:
          schema:
            $ref: '#/components/schemas/Error'
    EMVDataEmpty:
      x-model-version: 1.0
      description: EMV tag data empty
      content:
        application/JSON:
          schema:
            $ref: '#/components/schemas/Error'
    MissingReqParam:
      x-model-version: 1.0
      description: Missing required parameter
      content:
        application/JSON:
          schema:
            $ref: '#/components/schemas/Error'
    InvalidEllipticParam:
      x-model-version: 1.0
      description: Invalid elliptic curve type parameter
      content:
        application/JSON:
          schema:
            $ref: '#/components/schemas/Error'
    JSONSerializationError:
      x-model-version: 1.0
      description: JSON serialization error
      content:
        application/JSON:
          schema:
            $ref: '#/components/schemas/Error'
    JSONDeserializationError:
      x-model-version: 1.0
      description: JSON deserialization error
      content:
        application/JSON:
          schema:
            $ref: '#/components/schemas/Error'
    InvalidSwipeData:
      x-model-version: 1.0
      description: Invalid swipe data
      content:
        application/JSON:
          schema:
            $ref: '#/components/schemas/Error'
  examples:
    Successful:
      value:
        errorcode: 0,
        data: "AAdoWZghKq4An1Pl0PJKDQfTQ"
        message: "No error"
    WrongVersion:
      value:
        type: 'integer'
        code: '003'
        message: 'Message'
  parameters:
    TimestampHeader:
      x-model-version: 1.0
      name: Timestamp
      schema: {type: integer, format: int64}
      in: header
      required: true
      description: Epoch timestamp in milliseconds in the request from a client system.
        Used for authorization header generation and time limit (5 minutes).
    MessageDigestHeader:
      x-model-version: 1.0
      name: Message-Digest
      schema: {
        type: string,
        default: "Message-Digest"
       }
      in: header
      required: false
      description: Needed only from customer browser or app to the API in Hosted Payment
        Page requests.
    AcceptLanguageHeader:
      x-model-version: 1.0
      name: Accept-Language
      schema: {
        type: string,
        default: "Accept-Language"
       }
      in: header
      required: false
      description: The Accept Language header contains information about the language
        preference of a user. This HTTP header is useful to multilingual sites for
        deciding the best language to serve to the client. For example en-US or fr-CA.
    ApiKeyHeader:
      x-model-version: 1.0
      name: Api-Key
      schema: {
        type: string,
        default: "Api-Key"
       }
      in: header
      required: true
      description: API key provided to the merchant associating the requests with the appropriate app in the Developer Portal.
    ContentTypeHeader:
      x-model-version: 1.0
      name: Content-Type
      schema:
        type: string
        enum: [application/json]
        default: application/json
      in: header
      required: true
      description: The content type. Valid value (application/json).
    AccountParam:
      x-model-version: 1.0
      name: account
      schema: {
          type: string,
          default: 4444333322221111
        }
      in: header
      required: false
      description: This field is required only if devicedata is absent. It must contain either a clear or encrypted payment account number (PAN) or an ACH routing and account number string in the format <routing>/<account> for eCheck transactions.
                    If encryptionhandler is provided, the account is treated as an encrypted PAN.
    DeviceDataParam:
      x-model-version: 1.0
      name: devicedata
      schema: {
          type: string
          }
      in: header
      description: This field is required only if account is absent.
    CVVParam:
      x-model-version: 1.0
      name: cvv
      schema: {
          type: number,
        }
      in: header
      description: Card Verification Value (CVV)
    ExpiryParam:
      x-model-version: 1.0
      name: expiry
      schema:
        {
          type: number,
        }
      in: header
      description: Expiration date
    SigParam:
      x-model-version: 1.0
      name: signature
      schema:
        {
          type: string,
        }
      in: header
      description: Signature data is the form of a Base64-encoded, Gzipped bitmap (BMP)
    EncryptHandleParam:
      x-model-version: 1.0
      name: encryptionhandler
      schema:
        {
          type: string,
        }
      in: header
      description: Encryption Handler. Either RSA, EX_APPLE_PAY, EX_GOOGLE_PAY
    UniqueParam:
      x-model-version: 1.0
      name: unique
      schema:
        {
          type: boolean,
        }
      in: header
      description: Specifies whether a unique token should be generated. Defaults to false.
    ErrorCode:
      x-model-version: 1.0
      name: errorcode
      schema:
        type: integer
      in: header
      description: An error code that displays signifying the importance of error codes.
    MessageParam:
      x-model-version: 1.0
      name: message
      schema:
        {
          type: string,
        }
      in: header
      description: A message to send in the ping request and receive in the response. The value can be blank, however the message field must be included in the request.
