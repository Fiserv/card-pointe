################################################################################
# Copyrights Â© 2021-2022 Fiserv, Inc. or its affiliates.
# Fiserv is a trademark of Fiserv, Inc.,
# registered or used in the United States and foreign countries,
# and may or may not be registered in your country.
# All trademarks, service marks,
# and trade names referenced in this
# material are the property of their
# respective owners. This work, including its contents
# and programming, is confidential and its use
# is strictly limited. This work is furnished only
# for use by duly authorized licensees of Fiserv, Inc.
# or its affiliates, and their designated agents
# or employees responsible for installation or
# operation of the products. Any other use,
# duplication, or dissemination without the
# prior written consent of Fiserv, Inc.
# or its affiliates is strictly prohibited.
# Except as specified by the agreement under
# which the materials are furnished, Fiserv, Inc.
# and its affiliates do not accept any liabilities
# with respect to the information contained herein
# and are not responsible for any direct, indirect,
# special, consequential or exemplary damages
# resulting from the use of this information.
# No warranties, either express or implied,
# are granted or extended by this work or
# the delivery of this work
################################################################################

openapi: 3.0.2
info:
  title: CardPointe Gateway API Service Endpoints
  description: This API documentation provides technical guidance when utilizing CardPointe Gateway.
  version: 1.0.0
servers:
 - {url: 'DNE', description: Production}
 - {url: 'DNE', description: Sandbox}
paths:
  /cardconnect/rest/inquireMerchant:
    get:
      tags:
        - inquireMerchant Endpoint Definition
      x-group-name: CardPointe Gateway API
      x-proxy-name: inquireMerchant
      x-default-example: PaymentCard
      summary: A GET request to the inquireMerchant endpoint returns information on the merchant account configuration.
      description: |+
        A GET request to the inquireMerchant endpoint returns information on the merchant account configuration. This can be helpful for partners who need to validate their CardPointe merchant IDs or for businesses with merchants operating in multiple locations, to ensure that the merchant ID is boarded to the correct site.
      parameters:
      - in: query
        name: merchid
        required: true
        schema:
          $ref: '#/components/schemas/merchid'
          description: The MID to validate against the site specified in the request URL.
      - in: header
        $ref: '#/components/parameters/ContentTypeHeader'
      responses:
        200: 
          description: Success
          content:
            application/json:
              schema: {$ref: '#/components/schemas/inquireMerchantSuccess'}
        400:
          description: Not Found
          content:
            application/json:
              schema: {$ref: '#/components/schemas/NotFoundError'}
        404:
          description: Bad Request
          content:  
            application/json:
              schema: {$ref: '#/components/schemas/BadRequestError'}
  /cardconnect/rest/surcharge:
    get:
      tags:
        - surcharge Endpoint Definition
      x-group-name: CardPointe Gateway API
      x-proxy-name: surcharge
      x-default-example: PaymentCard
      summary: The surcharge endpoint is used to determine whether a surcharge fee will be applied to a transaction, based on the cardholder's postal code and payment method.
      description: |+ 
        The surcharge endpoint is used to determine whether or not a surcharge fee will be   applied to a transaction, based on the cardholder's postal code and payment method. This allows your application to notify the cardholder of the potential credit card surcharge prior to completing a transaction.
        
        This request does not effect whether a surcharge is applied to a transaction; the CardPointe Gateway automatically applies a surcharge depending on the merchant configuration and the eligibility of the payment account. This request is used only for informational purposes.
      parameters:
      - in: query
        name: merchid
        required: true
        schema:
          $ref: '#/components/schemas/merchid'
          description: The MID to validate against the site specified in the request URL.
      - in: query
        name: postal
        required: false
        schema:
          $ref: '#/components/schemas/postal'
          description: The cardholder's postal code used to verify that hte cardholder's state supports surcharging. Optional if token is specified.
      - in: query
        name: token
        required: false
        schema:
          $ref: '#/components/schemas/token'
      - in: header
        $ref: '#/components/parameters/ContentTypeHeader'
      responses:
        200: 
          description: Success
          content:
            application/json:
              schema: {$ref: '#/components/schemas/inquireMerchantSuccess'}
              examples:
                Approved for Surcharge:
                  $ref: '#/components/examples/approvedsurchargeExample'
                Debit Card not Elligible:
                  $ref: '#/components/examples/debitcardnotelligible'
                Missing Postal and Token:
                  $ref: '#/components/examples/missingpostalandtoken'
        400:
          description: Not Found
          content:
            application/json:
              schema: {$ref: '#/components/schemas/NotFoundError'}
        404:
          description: Bad Request
          content:  
            application/json:
              schema: {$ref: '#/components/schemas/BadRequestError'}
  /cardconnect/rest/auth:
   post:
      tags:
        - auth POST endpoint Definition
      x-group-name: CardPointe Gateway API
      x-proxy-name: auth
      x-default-example: PaymentCard
      summary: |
        Authorization is the initial step in accepting payment from a cardholder. This action "authorizes" or requests permission from the bank to transfer money from the cardholder to the merchant.
      description: |
        Authorization is the initial step in accepting payment from a cardholder. This action "authorizes" or requests permission from the bank to transfer money from the cardholder to the merchant.

        The authorization service supports a <code>PUT</code> or <code>POST</code> request that includes a JSON encoded list of fields defined for the service. The service responds with either an HTTP Exception, if there are errors, or a JSON-encoded response, if the request was successful.

        Within the response, the status of the transaction is described in the respstat value:

        * A - Approved
        * B - Retry
        * C - Declined
      responses:
        200: 
          description: Success
          content:
            application/json:
              schema: {$ref: '#/components/schemas/authResponse'}
        400:
          description: Not Found
          content:
            application/json:
              schema: {$ref: '#/components/schemas/NotFoundError'}
        404:
          description: Bad Request
          content:  
            application/json:
              schema: {$ref: '#/components/schemas/BadRequestError'}
##   put:
##      tags:
##        - auth PUT Endpoint Definition
##      x-group-name: CardPointe Gateway API
##      x-proxy-name: auth
##      x-default-example: PaymentCard
##      summary: A GET request to the inquireMerchant endpoint returns information on the merchant account configuration.
##      description: |
##        Authorization is the initial step in accepting payment from a cardholder. This action "authorizes" or requests permission from the bank to transfer money from the cardholder to the merchant.

##        The authorization service supports a PUT or POST request that includes a JSON encoded list of fields defined for the service. The service responds with either an HTTP Exception, if there are errors, or a JSON-encoded response, if the request was successful.

##        Within the response, the status of the transaction is described in the respstat value:
##
##        * A - Approved
##        * B - Retry
##        * C - Declined
##      parameters:
##      - in: query
##        name: merchid
##        required: true
##        schema:
##          $ref: '#/components/schemas/merchid'
##          description: The MID to validate against the site specified in the request URL.
##      - in: header
##        $ref: '#/components/parameters/ContentTypeHeader'
##      responses:
##        200: 
##          description: Success
##          content:
##            application/json:
##              schema: {$ref: '#/components/schemas/inquireMerchantSuccess'}
##        400:
##          description: Not Found
##          content:
##            application/json:
##              schema: {$ref: '#/components/schemas/NotFoundError'}
##        404:
##          description: Bad Request
##          content:  
##           application/json:
##              schema: {$ref: '#/components/schemas/BadRequestError'}
  /cardconnect/rest/capture:
    post:
      tags:
        - capture Endpoint Definition
      x-group-name: CardPointe Gateway API
      x-proxy-name: capture
      x-default-example: PaymentCard
      summary: The capture service queues the transaction amount for settlement. Capture can occur within the authorization request or subsequently.
      description: | 
        The capture service uses a <code>PUT</code> or <code>POST</code> method queues the transaction amount for settlement. Capture can occur within the authorization request or subsequently.
        
        Both <code>merchid</code> and <code>retref</code> are required fields.

        If the amount to be captured is more than the authorized amount (such as a tip adjustment), ensure that the merchant is appropriately entitled with this capability.

        The service responds with either a JSON-encoded response or an HTTP error code. 
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/captureRequest'
      parameters:
        - {$ref: '#/components/parameters/ContentTypeHeader'}
        - {$ref: '#/components/parameters/Authorization'}
      responses:
        200: 
          description: Success
          content:
            application/json:
              schema: {$ref: '#/components/schemas/captureSuccess'}
        400:
          description: Not Found
          content:
            application/json:
              schema: {$ref: '#/components/schemas/NotFoundError'}
        404:
          description: Bad Request
          content:  
            application/json:
              schema: {$ref: '#/components/schemas/BadRequestError'}
  /cardconnect/rest/void:
    post:
      tags:
        - void Endpoint Definition
      x-group-name: CardPointe Gateway API
      x-proxy-name: void
      x-default-example: PaymentCard
      summary: The void service cancels a transaction that is in either "Authorized" or "Queued for Capture" status.
      description: | 
        The void service cancels a transaction that is in either "Authorized" or "Queued for Capture" status.

        Partial voids are not supported for debit transactions. If you specify a partial void amount for a debit transaction, the entire amount is voided. Omit the amount or specify the full amount for a debit void.

        You can retrieve the status of a transaction using the inquire or inquireByOrderid endpoint. 

        The response includes a voidable field, which indicates whether or not the transaction can be voided.

        The setlstatfield in determines the amount that can be voided, where:

        "setlstat" : "Authorized"
        This status indicates the transaction has been authorized but not queued for capture. The entire amount or a partial amount can be voided.
        "setlstat" : "Queued for Capture"
        Only the entire amount can be voided.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/voidRequest'
      parameters:
        - {$ref: '#/components/parameters/ContentTypeHeader'}
        - {$ref: '#/components/parameters/Authorization'}
      responses:
        200: 
          description: Success
          content:
            application/json:
              schema: {$ref: '#/components/schemas/voidResponse'}
        400:
          description: Not Found
          content:
            application/json:
              schema: {$ref: '#/components/schemas/NotFoundError'}
        404:
          description: Bad Request
          content:  
            application/json:
              schema: {$ref: '#/components/schemas/BadRequestError'}
  /cardconnect/rest/refund:
    post:
      tags:
        - refund Endpoint Definition
      x-group-name: CardPointe Gateway API
      x-proxy-name: refund
      x-default-example: PaymentCard
      summary: The refund service is used for transactions that are in a settled status.
      description: | 
        The refund service is used for transactions that are in a settled status.
        
        <code>merchid</code> and <code>retref</code> are required fields.

        You can refund a specific transaction using the retrieval reference number <code>retref</code> provided in the authorization response. 
        
        You can retrieve the status of a transaction using the <a href="https://developerstudio.fiserv.com/product/CardPointe/api/?type=get&path=/cardconnect/rest/inquire">inquire</a> or <a href="https://developerstudio.fiserv.com/product/CardPointe/api/?type=get&path=/cardconnect/rest/inquireByOrderid">inquireByOrderid</a> endpoint.

        The response includes a <code>refundable</code> field, which indicates whether or not the transaction can be refunded.

        The specific transaction status is recorded in the <code>setlstat</code> field.
        
        Some banks impose maximum time limits (for example, 6 months) to perform a refund using a retref. 

        If you do not have a retref for the transaction, you can return funds to an account by passing a negative <code>amount</code> (forced credit) in an authorization and subsequent capture request. 
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/refundRequest'
      parameters:
        - {$ref: '#/components/parameters/ContentTypeHeader'}
        - {$ref: '#/components/parameters/Authorization'}
      responses:
        200: 
          description: Success
          content:
            application/json:
              schema: {$ref: '#/components/schemas/refundResponse'}
        400:
          description: Not Found
          content:
            application/json:
              schema: {$ref: '#/components/schemas/NotFoundError'}
        404:
          description: Bad Request
          content:  
            application/json:
              schema: {$ref: '#/components/schemas/BadRequestError'}
  /cardconnect/rest/inquire:
    get:
      tags:
        - inquire Endpoint Definition
      x-group-name: CardPointe Gateway API
      x-proxy-name: inquire
      x-default-example: PaymentCard
      summary: The inquire service returns information for an individual transaction, including its settlement status (setlstat) and the response codes from the initial authorization. 
      description: | 
        The inquire service returns information for an individual transaction, including its settlement status (<code/>setlstat</code>) and the response codes from the initial authorization. 
      parameters:
      - in: query
        name: merchid
        required: true
        schema:
          $ref: '#/components/schemas/merchid'
          description: The MID from the original authorization.
      - in: query
        name: retref
        required: true
        schema:
          $ref: '#/components/schemas/retref'
          description: Retrieval reference number from the original authorization.
      - in: header
        $ref: '#/components/parameters/ContentTypeHeader'
      - in: header
        $ref: '#/components/parameters/Authorization'
      responses:
        200: 
          description: Success
          content:
            application/json:
              schema: {$ref: '#/components/schemas/inquireResponse'}
        400:
          description: Not Found
          content:
            application/json:
              schema: {$ref: '#/components/schemas/NotFoundError'}
        404:
          description: Bad Request
          content:  
            application/json:
              schema: {$ref: '#/components/schemas/BadRequestError'}
components:
  parameters:
    Authorization:
      x-model-version: 1.0 
      name: Authorization
      schema: {type: integer, format: int64}
      in: header
      required: true
      description: The Terminal API Authorization Key
    TimestampHeader:
      x-model-version: 1.0
      name: Timestamp
      schema: {type: integer, format: int64}
      in: header
      required: true
      description: Epoch timestamp in milliseconds in the request from a client system.
        Used for authorization header generation and time limit (5 minutes).
    MessageDigestHeader:
      x-model-version: 1.0
      name: Message-Digest
      schema: {
        type: string,
        default: "Message-Digest"
       }
      in: header
      required: false
      description: Needed only from customer browser or app to the API in Hosted Payment
        Page requests.
    AcceptLanguageHeader:
      x-model-version: 1.0
      name: Accept-Language
      schema: {
        type: string,
        default: "Accept-Language"
       }
      in: header
      required: false
      description: The Accept Language header contains information about the language
        preference of a user. This HTTP header is useful to multilingual sites for
        deciding the best language to serve to the client. For example en-US or fr-CA.
    ApiKeyHeader:
      x-model-version: 1.0
      name: Api-Key
      schema: {
        type: string,
        default: "Api-Key"
       }
      in: header
      required: true
      description: API key provided to the merchant associating the requests with the appropriate app in the Developer Portal.
    ContentTypeHeader:
      x-model-version: 1.0
      name: Content-Type
      schema:
        type: string
        enum: [application/json]
        default: application/json
      in: header
      required: true
      description: The content type. Valid value (application/json).
    AccountParam:
      x-model-version: 1.0
      name: account
      schema: {
          type: string,
          default: 4444333322221111
        }
      in: header
      required: false
      description: This field is required only if devicedata is absent. It must contain either a clear or encrypted payment account number (PAN) or an ACH routing and account number string in the format <routing>/<account> for eCheck transactions.
                    If encryptionhandler is provided, the account is treated as an encrypted PAN.
    DeviceDataParam:
      x-model-version: 1.0
      name: devicedata
      schema: {
          type: string
          }
      in: header
      description: This field is required only if account is absent.
    CVVParam:
      x-model-version: 1.0
      name: cvv
      schema: {
          type: number,
        }
      in: header
      description: Card Verification Value (CVV)
    ExpiryParam:
      x-model-version: 1.0
      name: expiry
      schema:
        {
          type: number,
        }
      in: header
      description: Expiration date
    SigParam:
      x-model-version: 1.0
      name: signature
      schema:
        {
          type: string,
        }
      in: header
      description: Signature data is the form of a Base64-encoded, Gzipped bitmap (BMP)
    EncryptHandleParam:
      x-model-version: 1.0
      name: encryptionhandler
      schema:
        {
          type: string,
        }
      in: header
      description: Encryption Handler. Either RSA, EX_APPLE_PAY, EX_GOOGLE_PAY
    UniqueParam:
      x-model-version: 1.0
      name: unique
      schema:
        {
          type: boolean,
        }
      in: header
      description: Specifies whether a unique token should be generated. Defaults to false.
    ErrorCode:
      x-model-version: 1.0
      name: errorcode
      schema:
        type: integer
      in: header
      description: An error code that displays signifying the importance of error codes.
    MessageParam:
      x-model-version: 1.0
      name: message
      schema:
        {
          type: string,
        }
      in: header
      description: A message to send in the ping request and receive in the response. The value can be blank, however the message field must be included in the request.
  schemas:
    account:
      maxLength: 19
      type: integer
      description: Masked account number
      example: 9441149619831111
    avs:
      maxLength: 1
      type: string
      description: | 
        Specifies whether or not AVS validation is enabled for the MID. 
        
        Possible values are:
        * Y
        * N
        
        If Y, the MID can perform $0 authorizations to validate the postal and address values in the auth request.
      example: Y
    avsresp:
      maxLength: 2
      type: string
      description: |
        	Alpha-numeric AVS (zip code) verification response code.

          Note: <code>avsresp</code> is typically only returned for approved authorizations, however this field can be returned in the response for a declined authorization if this setting is enabled for the merchant account.
    authcode:
      maxLength: 16
      type: string
      description: Authorization code from original authorization request
      example: 046221
    authResponse: 
      x-model-version: 1.0
      description: auth Response
      properties:
        respstat:
          $ref: '#/components/schemas/respstat'
        retref:
          $ref: '#/components/schemas/retref'
        account:
          $ref: '#/components/schemas/account'
        expiry:
          $ref: '#/components/schemas/expiry'
        token:
          $ref: '#/components/schemas/token'
        amount:
          $ref: '#/components/schemas/amount'
        orderId:
          $ref: '#/components/schemas/orderId'
        merchid:
          $ref: '#/components/schemas/merchid'
        respcode:
          $ref: '#/components/schemas/respcode'
        resptext:
          $ref: '#/components/schemas/resptext'
        respproc:
          $ref: '#/components/schemas/respproc'
        cof:
          $ref: '#/components/schemas/cof'
        avsresp:
          $ref: '#/components/schemas/avsresp'
        cvvresp:
          $ref: '#/components/schemas/cvvresp'
        binInfo:
          $ref: '#/components/schemas/binInfo'
        bintype:
          $ref: '#/components/schemas/bintype'
        entrymode:
          $ref: '#/components/schemas/entrymode'
        fee_amount:
          $ref: '#/components/schemas/fee_amount'
        fee_authcode:
          $ref: '#/components/schemas/fee_authcode'
        fee_format:
          $ref: '#/components/schemas/fee_format'
        fee_merchid:
          $ref: '#/components/schemas/fee_merchid'
        fee_retref:
          $ref: '#/components/schemas/fee_retref'
        fee_type:
          $ref: '#/components/schemas/fee_type'
        fee_value:
          $ref: '#/components/schemas/fee_value'
        declineCategory:
          $ref: '#/components/schemas/declineCategory'
        declineCategoryText:
          $ref: '#/components/schemas/declineCategoryText'
        authcode:
          $ref: '#/components/schemas/authcode'
        signature:
          $ref: '#/components/schemas/signature'
        commcard:
          $ref: '#/components/schemas/commcard'
        emv:
          $ref: '#/components/schemas/emv'
        emvTagData:
          $ref: '#/components/schemas/emvTagData'
        receipt:
          $ref: '#/components/schemas/receipt'
        receiptObj:
          $ref: '#/components/schemas/receiptObj'
    amount:
      maxLength: 12
      type: integer
      description: Capture amount in decimal or in currency minor units (for example, USD Pennies or MXN centavos)
      example: 0.01
    bintype:
      maxLength: 16
      description: |
        The type of card, based on the BIN.

        Possible values:
        * Corp
        * FSA+Prepaid
        * GSA+Purchase
        * Prepaid
        * Prepaid+Corp
        * Prepaid+Purchase
        * Purchase
      example: ""
    binInfo:
      type: array
      items:
        properties:
          country:
            type: string
            description: Issuer country of origin
            example: USA
          product:
            type: string
            example: D
            description: |
              Card type, one of the following:
                * A = Amex
                * D = Discover
                * M = Mastercard
                * N = Non-co-branded debit card
                * V = Visa
          bin:
            type: integer
            example: 601101
            description: The bank identification number (BIN) of the card used.
          cardusestring:
            type: string
            example: True credit, No PIN/Signature capability
            description: |
              General usage type, one of the following:
                * Credit Hybrid (PIN and Signature)
                * PIN Only Debit with Electronic Benefit Transfer
                * Debit Hybrid (PIN and Signature)
                * USA Commercial Debit, Signature Only, No PIN Access
                * USA Commercial Debit, PIN Capable
                * Non USA Consumer Debit, No PIN Access
                * Non USA Commercial Debit, No PIN Access
                * Non USA Consumer Debit, PIN Capable
                * Non USA Commercial Debit, PIN Capable
                * PIN Only Debit without Electronic Benefit Transfer
                * Private Label Credit (MasterCard)
                * Signature only Debit, No PIN Access
                * True credit, No PIN/Signature capability
          gsa:
            type: boolean
            example: false
            description: Indicates if card used is a GSA card.
          corporate:
            type: boolean
            example: false
            description: Indicates if card used is a corporate card. 
          fsa:
            type: boolean
            example: false
            description: Indicates if card used is an FSA card. 
          subtype:
            type: string
            example: Consumer Credit - Rewards
            description: Detailed subtype of card, blank if not available.
          purchase:
            type: boolean
            example: false
            description: Indicates if card used is a purchase card.
          prepaid:
            type: boolean
            example: false
            description: Indicates if card used is a prepaid card.
          issuer:
            type: string
            example: " "
            description: Card issuing bank/institution 
          binlo:
            type: integer
            example: 601100XXX
            description: The low end of the BIN range that includes the card's BIN value. Masked after the first six digits.
          binhi:
            type: integer
            example: 601102XXX
            description: The high end of the BIN range that includes the card's BIN value. Masked after the first six digits.
    batchid:
      maxLength: 12
      type: string
      description: The Batch ID automatically created and assigned to transaction unless specified otherwise.
      example: 1900941262
    captureRequest:
      x-model-version: 1.0
      description: captureRequest
      properties:
        merchid:
          $ref: '#/components/schemas/merchid'
        retref:
          $ref: '#/components/schemas/retref'
        authcode:
          $ref: "#/components/schemas/authcode"
        amount:
          $ref: '#/components/schemas/amount'
        invoiceid:
          $ref: '#/components/schemas/invoiceid'
        receipt:
          $ref: '#/components/schemas/receipt'
    captureSuccess:
      x-model-version: 1.0
      description: captureSuccess
      properties:
        merchid:
          $ref: '#/components/schemas/merchid'
        account: 
          $ref: '#/components/schemas/account'
        authcode:
          $ref: "#/components/schemas/authcode"
        orderid:
          $ref: '#/components/schemas/orderId'
        amount:
          $ref: '#/components/schemas/amount'
        retref:
          $ref: '#/components/schemas/retref'
        batchid:
          $ref: '#/components/schemas/batchid'
        commcard:
          $ref: '#/components/schemas/commcard'
        setlstat:
          $ref: '#/components/schemas/setlstat'
        receipt:
          $ref: '#/components/schemas/receipt'
    capturedate:
      maxLength: 14
      type: string
      description: The date the transaction was captured in YYYYMMDDHHMMSS.
      example: 20240101142832
    cardproc:
      maxLength: 4
      type: string
      description: The card processor that the MID is configured to use.
      example: RPCT
    cof:
      maxLength: 1
      type: string
      description: | 
        Returns the <code>cof</code> value, if included in the authorization request. 

        One for the following values:
          * C - Customer-Initiated Transaction (CIT)
          * M - Merchant-Initiated Transaction (MIT)
      example: C
    commcard:
      maxLength: 1
      type: string
      description: |
        **Y** if corporate card
      example: N
    currency:
      maxLength: 3
      type: string
      description: Currency type taken from the original authorization request.
      example: USD
    cvv:
      maxLength: 1
      type: string
      description: |
        Specifies whether or not CVV validation is enabled for the MID.
        
        Possible values are:

        * Y
        * N
  
        If Y, the MID can perform $0 authorizations to validate the cvv2 value in the auth request.
      example: Y
    cvvresp:
      maxLength: 1
      type: string
      description: |
        Alpha-numeric CVV (card verification value) verification response code, if returned by the processor.

        One of the following values:
          * M - Valid CVV Match.
          * N - Invalid CVV.
          * P - CVV Not Processed.
          * S - Merchant indicated that the CVV is not present on the card.
          * U - Card issuer is not certified and/or has not provided Visa encryption keys.
          * X or blank - No response. 
        Note: <code>cvvresp</code> is typically only returned for approved authorizations, however this field can be returned in the response for a declined authorization if this setting is enabled for the merchant account.
    echeck:
      maxLength: 1
      type: string
      description: | 
        Specifies whether or not the MID is configured to process eCheck/ACH transactions.

        Possible values are:

        * Y
        * N

        If Y, the MID can perform ACH transactions.
      example: N
    acctid:
      maxLength: 3
      type: integer
      description: Account identifier within a profile. Present if transaction utilized a stored profileid. 
      example: 321
    acctupdater:
      maxLength: 1
      type: string
      description: |

        Specifies whether or not the MID is enrolled in the Card Account Updater service.
        
        Possible values are:
        * Y
        * N
      example: N
    authdate:
      maxLength: 14
      type: string
      example: 20240104
      description: Date of the authorization in YYYYMMDD.
    emvTagData:
      type: array
      description: The emvTagData field contains an array of objects indicating the returned results of EMV Tag information from their sources.
      items:
        properties:
          TVR:
            description: |
              Terminal Verification Results displays the status of the different functions as seen from the terminal.
              
              Tag: 95
            type: number
            example: 0001100129
          ARC:
            description: |
              The Authorization Response Code indicates the transaction disposition of the transaction received from the issuer for theonline authorization.
              
              Tag: 8A
            type: string
            example: 00
          PIN:
            type: string
            example: Verified by PIN
            description: | 
              Indicates the results of the last CVM performed. If PIN was entered, then "Verified by PIN"  
              
              Tag: 9F34
          Signature:
            description: |
              Indicates the results of the last CVM performed. If "true" then CVM supports signature and signature line may be applicable. However, card brands have moved away from requiring signature.

              Returns "unknown" if the signature requirement could not be determined.
              
              Tag: 9F34
            type: string
            example: unknown
          Mode:
            description: |
              Identifies the mode used to authorize (or decline) the transaction. Always <code>Issuer</code>. 
            type: string
            maxLength: 6
            example: Issuer
          TSI:
            description: |
              The Transaction Status Information field indicates the functions performed in a transaction. 
              
              Tag: 9B
            type: integer
            example: 6800
          Application Preferred Name:
            description: |
              Preferred mnemonic associated with the AID. If unabailable Application Label provided.
            
              Tag: 9F12
            example: Visa Credit
            type: string
          AID:
            example: A0000000031010
            type: string
            description: The Application Identified Data identifies the application as described in ISO/IEC 7816-5.
          IAD: 
            example: 06010A03A0B800
            type: string
            description: The Issuer Application Data contains proprietary application data for transmission to the issuer in an online transaction.
          Entry Method:
            example: Chip Read
            type: string
            description: |
              Indicator identifying how the card information was obtained.

              One of the following values:
                * Manual
                * Chip Read
                * Contactless Chip
                * Contactless Fallback Swipe
                * Fallback Keyed
                * Fallback Swipe
                * Swipe
          Application Label:
            example: VISA CREDIT
            type: string
            description: Mnemonic associated with the AID according to ISO/IEC 7816-5. If unavailable Application Preferred Name displayed.   
    enabled:
      type: boolean
      example: true
      description: Specifies whether the MID is currently enabled for use. 
    expiry:
      type: string
      example: 1228
      description: The account's expiration date in MMYY.
    emv:
      description: Authorization Response Cryptogram (ARPC). This is returned only when EMV data is present within the Track Parameter.
      type: string
      example: " "
    entrymode:
      maxLength: 25
      example: Digital Wallet
      type: string
      description: |
        Possible Values:
          * Keyed
          * Moto
          * ECommerce
          * Recurring
          * Swipe (Non EMV)
          * DigitalWallet
          * EMVContact
          * Contactless
          * Fallback to Track
          * Fallback to Keyed
    fee_authcode:
      maxLength: 6
      type: integer
      description: Duplicate of the <code>authcode</code> field included if the transaction included a fee (for example, a credit card surcharge).
    fee_amount:
      maxLength: 14
      example: 1402
      description: The fee amount (for example a credit card surcharge amount) applied to the transaction in dollars and cents.
      type: number
    fee_format:
      type: string
      description: | 
        Specifies the surcharge fee format.
          
        Possible values are:
        
        * <code>flat</code>
        * <code>percent</code>
      example: percent
      maxLength: 7
    fee_merchid:
      type: string
      maxLength: 16
      example: 55555666959
      description: |
        Specifies the linked MID used for processing transactions with surcharge enabled.

        If not applicable, this field is returned as an empty string.
    fee_type: 
      type: string
      example: S
      description: |
        Specifies whether the merchant has convenience or surcharge fees enabled.
        
        Possible values are:
        
        * C - convenience fee
        * F - service fee
        * S - surcharge fee
        * N - none
    fee_value:
      type: integer
      example: 4
      description: |
        Specifies the fee value configured for the MID, where the value is either a percentage or flat amount, used to calculate the fee for each transaction.
    fee_retref:
      type: integer
      example: ""
      description: The unique retrieval reference number for a fee. If not applicable or the same as the transaction retref, returns an empty value ("").
    declineCategory:
      type: integer
      maxLength: 1
      description: |
        A numeric decline category code, only returned for declined transactions using Visa accounts.

        See <a href="https://support.cardpointe.com/compliance/visa-decline-rules">Visa Decline Rules and Responses</a> for detailed information on handling Visa declines.

        One of the following values:

        * 1 - Issuer Will Never Approve.

        In this case, the merchant should never reattempt to authorize the transaction, and the cardholder must provide an alternate payment method. This code can be returned for accounts that are blocked, never existed, or are otherwise flagged as invalid by the issuer.

        * 2 - Issuer Cannot Approve at this Time.

        In this case, the merchant may reattempt the authorization at a later time. Reasons for this decline can include velocity controls, credit risk holds, or system errors.

        Note: You may reattempt this transaction a maximum of 15 times in a 30-day period before incurring excessive reattempt fees, unless you receive an updated declineCategory of 1, in which case you should no longer reattempt this transaction.

        * 3 - Issuer Cannot Approve Based on Details Provided.

        In this case, the card has been declined due to incorrect data, such as the CVV, expiry, or PIN. The merchant may attempt the authorization, after obtaining the corrected data.

        Note: You may reattempt this transaction a maximum of 15 times in a 30-day period before incurring excessive reattempt fees, unless you receive an updated declineCategory of 1, in which case you should no longer reattempt this transaction.
    declineCategoryText:
      type: string
      maxLength: 25
      description: |
        A text description of the declineCategory value.

        One of the following:

        * <code>Do not retry</code> - Returned for declineCategory 1.
        * <code>Wait to retry</code> - Returned for declineCategory 2.
        * <code>Fix the request and retry</code> - Returned for declineCategory 3. 
    inquireResponse:
      x-model-version: 1.0
      description: inquire Response
      properties:
        merchid:
          $ref: '#/components/schemas/merchid'
        orderid:
          $ref: '#/components/schemas/orderId'
        expiry:
          $ref: '#/components/schemas/expiry'
        amount:
          $ref: '#/components/schemas/amount'
        currency:
          $ref: '#/components/schemas/currency'
        retref:
          $ref: '#/components/schemas/retref'
        respcode:
          $ref: "#/components/schemas/respcode"
        respproc:
          $ref: '#/components/schemas/respproc'
        respstat:
          $ref: '#/components/schemas/respstat'
        resptext:
          $ref: '#/components/schemas/resptext'
        batchid:
          $ref: '#/components/schemas/batchid'
        setlstat:
          $ref: '#/components/schemas/setlstat'
        capturedate:
          $ref: '#/components/schemas/capturedate'
        settledate:
          $ref: '#/components/schemas/settledate'
        signature:
          $ref: '#/components/schemas/signature'
        token:
          $ref: '#/components/schemas/token'
        profileid:
          $ref: '#/components/schemas/profileid'
        acctid:
          $ref: '#/components/schemas/acctid'
        authdate:
          $ref: '#/components/schemas/authdate'
        lastfour:
          $ref: '#/components/schemas/lastfour'
        name:
          $ref: '#/components/schemas/name'
        bintype:
          $ref: '#/components/schemas/bintype'
        entrymode:
          $ref: '#/components/schemas/entrymode'
        fee_authcode:
          $ref: '#/components/schemas/fee_authcode'
        fee_format:
          $ref: '#/components/schemas/fee_format'
        fee_merchid:
          $ref: '#/components/schemas/fee_merchid'
        fee_retref:
          $ref: '#/components/schemas/fee_retref'
        fee_type:
          $ref: '#/components/schemas/fee_type'
        fee_value:
          $ref: '#/components/schemas/fee_value'
        emvTagData:
          $ref: '#/components/schemas/emvTagData'
        receipt:
          $ref: '#/components/schemas/receipt'
        userfields:
          $ref: '#/components/schemas/userfields'
        voidable:
          $ref: '#/components/schemas/voidable'
        refundable:
          $ref: '#/components/schemas/refundable'
        declineCategory:
          $ref: '#/components/schemas/declineCategory'
        declineCategoryText:
          $ref: '#/components/schemas/declineCategoryText'
    invoiceid:
      maxLength: 12
      type: string
      description: An optional invoice ID
      example: 120393822
    lastfour:
      maxLength: 4
      type: integer
      description: Last 4 digits of the token or card number. 
      example: 1111
    merchid:
      maxLength: 16
      type: string
      example: 123456789012
    name:
      maxLength: 30
      type: string
      description: The account name, if returned in the track data.
      example: Dylan Wolf
    postal:
      maxLength: 9
      type: string
      description: | 
        The cardholder's postal code used to verify that the cardholder's state supports surcharging.

        Optional if token is specified.
      example: 19355
    profileid:
      maxLength: 20
      type: string
      description: Primary identifier to access profiles. Present if transaction utilized a stored profileid. 
      example: 11700182899933000746
    orderId:
      maxLength: 50
      type: string
      description: |
        The <code>orderId</code>, copied from the authorization request.

        The <code>orderId</code> is returned in the response when the request includes an <code>orderId</code> and <code>"receipt":"y"</code>.

        If no <code>orderId</code> was passed and <code>"receipt":"json"</code>, <code>"n"</code>, or omitted the <code>orderId</code> field is omitted from the response.
        
        The order ID must be a unique value. Using duplicate order IDs can lead to the wrong transaction being voided in the event of a timeout.
        
        The order ID must not include any portion of a payment account number (PAN), and no portion of the order ID should be mistaken for a PAN. If the order ID passes the Luhn check performed by the CardPointe Gateway, the value will be masked in the database, and attempts to use the order ID in an inquire, void, or refund request will fail.
      example: "7372819823727189E76"
    site: 
      type: string
      example: <mid site>
      description: The site that the MID is configured to use.
      maxLength: 12
    voidRequest:
      x-model-version: 1.0
      description: voidRequest
      properties:
        merchid:
          $ref: '#/components/schemas/merchid'
        retref:
          $ref: '#/components/schemas/retref'
        amount:
          $ref: '#/components/schemas/amount'
    voidResponse:
      x-model-version: 1.0
      description: voidResponse
      properties:
        merchid:
          $ref: '#/components/schemas/merchid'
        orderId:
          $ref: '#/components/schemas/orderId'
        amount:
          $ref: '#/components/schemas/amount'
        currency:
          $ref: '#/components/schemas/currency'
        retref:
          $ref: '#/components/schemas/retref'
        respcode:
          $ref: '#/components/schemas/respcode'
        respproc:
          $ref: '#/components/schemas/respproc'
        respstat:
          $ref: '#/components/schemas/respstat'
        resptext:
          $ref: '#/components/schemas/resptext'
        receipt:
          $ref: '#/components/schemas/receipt'
    refundRequest:
      x-model-version: 1.0
      description: refundRequest
      properties:
        merchid:
          $ref: '#/components/schemas/merchid'
        retref:
          $ref: '#/components/schemas/retref'
        amount:
          $ref: '#/components/schemas/amount'
        orderid:
          $ref: '#/components/schemas/orderId'
    refundResponse:
      x-model-version: 1.0
      description: refundResponse
      properties: 
        merchid:
          $ref: '#/components/schemas/merchid'
        retref:
          $ref: '#/components/schemas/retref'
        amount:
          $ref: '#/components/schemas/amount'
        orderid:
          $ref: '#/components/schemas/orderId'
        respcode:
          $ref: '#/components/schemas/respcode'
        respproc:
          $ref: '#/components/schemas/respproc'
        respstat:
          $ref: '#/components/schemas/respstat'
        resptext:
          $ref: '#/components/schemas/resptext'
        receipt:
          $ref: '#/components/schemas/receipt'
        declineCategory:  
          $ref: '#/components/schemas/declineCategory'
        declineCategoryText:
          $ref: '#/components/schemas/declineCategoryText'
    respstat:
      example: A
      maxLength: 1
      type: string
      description: |
        Indicates the status of the request. Can be one of the following values:
          
        * A - Approved
        * B - Retry
        * C - Declined
    respcode:
      maxLength: 3
      type: string
      description: Alpha-numeric <a href=https://developer.cardpointe.com/gateway-response-codes>response code</a> that represents the description of the response. 
      example: 00
    respproc: 
      type: string
      maxLength: 4
      description: Abbreviation that reprersents the platform and the processor for the trransaction
      example: FNOR
    resptext:
      type: string
      maxLength: 40
      description: Text description of the response
      example: Approval
    receipt:
      type: string
      maxLength: 1
      description: |
          Optional to return <a href="https://www.wikipedia.com/Kenneth_Groninger">receipt data fields</a> in the response.
          
          Specify **Y** to return additional merchant and transaction data to print on a receipt.
          
          Defualts to **N** if not provided.
      example: N
    receiptObj:
      type: array 
      items:
        properties:
          address1:
            type: string 
            description: First line of the merchant's address.
            example: 1000 Continental Dr., King of Prussia, PA. 19355
          address2:
            type: string
            description: Second line of merchant's address.
            example: " "
          Application Label:
            type: string
            description: Duplicated from the <code>emvTagData</code> object. Mnemonic associated with the AID according to ISO/IEC 7816-5. 
            example: VISA CREDIT
          dateTime:
            type: number
            description: The date and time of the transaction (YYYYMMDDHHMMSS).
            example: 202408020322
          dba:
            type: string
            description: The merchant's Doing Business As (DBA) name. 
            example: Dyl's Deals
          emv:
            type: array
            items:
              properties:
                TVR:
                  description: |
                    Terminal Verification Results displays the status of the different functions as seen from the terminal.
                    
                    Tag: 95
                  type: number
                  example: 0001100129
                ARC:
                  description: |
                    The Authorization Response Code indicates the transaction disposition of the transaction received from the issuer for theonline authorization.
                    
                    Tag: 8A
                  type: string
                  example: 00
                TSI:
                  description: |
                    The Transaction Status Information field indicates the functions performed in a transaction. 
                    
                    Tag: 9B
                  type: integer
                  example: 6800
                AID:
                  example: A0000000031010
                  type: string
                  description: The Application Identified Data identifies the application as described in ISO/IEC 7816-5.
                IAD: 
                  example: 06010A03A0B800
                  type: string
                  description: The Issuer Application Data contains proprietary application data for transmission to the issuer in an online transaction.
        Entry Method:
          type: string
          description: |
            Duplicated from the emvTagData object. 
            Indicator identifying how the card information was obtained.
            
            One of the following values:
            
            * Manual
            * Chip Read
            * Contactless Chip
            * Fallback Keyed
          example: Chip Read
        footer:
          type: string
          description: A customizable field to display an alphanumeric message. For example, a specific terms, disclosure, or cardholder agreement statement.
          example: " "
        header: 
          type: string
          description: A customizable field to display an alphanumeric message. For example, a specific terms, disclosure, or cardholder agreement statement.
          example: " "
        items: 
          type: string
          description: A custom item descriptor, if included in the userFields in the authorization request.
          example: " "
        Mode: 
          type: string
          description: Duplicated from the <code>emvTagData</code> object. Identifies the mode used to authorize (or decline) the transaction. Always Issuer.
          example: Issuer
        nameOnCard:
          type: string
          description: The Cardholder's name, if included in the authorization request.
          example: Dylan Wolf
        orderNote:
          type: string
          description: A custom order note, if included in the userFields in the authorization request.
          example: " "
        phone:
          type: string
          description: The merchant's phone number.
          exampel: 123-456-7890
        PIN: 
          type: string
          description:  Duplicated from the <code>emvTagData</code> object. Indicates the results of the last CVM performed. If PIN was entered, then "Verified by PIN"
          example: Verified by PIN
        Signature:
          type: string
          description: |
            Duplicated from the <code>emvTagData</code> object. Indicates the results of the last CVM performed. If "true" then CVM supports signature and signature line may be applicable. However, card brands have moved away from requiring signature.

            Returns "unknown" if the signature requirement could not be determined.
    refundable:
      type: string
      description: |
        Indicates whether the transaction can be refunded in its current state.

        The refundable value is determined by the status of the batch at the time of inquiry, as well as the MID configuration. If the MID is enabled to refund for unsettled authorizations, then refundable always returns Y.

        If Y, the transaction can be refunded.

        If N, the transaction cannot be refunded.
      maxLength: 1
      example: Y
    retref:
      type: integer
      maxLength: 14
      description: CardPointe retrieval reference number from authorization response
      example: 123456789012
    signature:
      description: JSON-escaped, Base64-encoded, Gzipped, BMP of signature data (from a signature-capable terminal). Returned if the authorization used a token that had associated signature data or track data with embedded signature data.
      maxLength: 6144
      example: ""
    settledate:
      maxLength: 14
      type: string
      example: 20240103142834
      description: The date the transaction was settled in YYYYMMDDHHMMSS.
    setlstat:
      maxLength: 40
      type: string
      description: |
        The current settlement status. The settlement status changes throughout the transaction lifecycle, from authorization to settlement. The following values can be returned in the capture response:

        ***Note: See Settlement Status Response Values for a complete list of setlstat values.***

        * Authorized - The authorization was approved, but the transaction has not yet been captured. 
        * Declined - The authorization was declined; therefore, the transaction can not be captured.
        * Queued for Capture - The authorization was approved and captured but has not yet been sent for settlement.
        * Voided - The authorization was voided; therefore, the transaction cannot be captured.
        * Zero Amount - The authorization was a $0 auth for account validation, which cannot be captured. 
      example: Authorized
    token: 
      maxLength: 19
      type: integer
      description: | 
        The tokenized account number used to verify that the card type is eligible for surcharging.

        Optional if postal is specified.
    userfields: 
      type: array 
      items: 
        properties:
          name:
            type: string
            description: The name of the created field.
          value:
            type: string
            description: The value of the field.
      example:
        "userfields":
          [
            {"udf0": "value0"},
            {"udf1": "value1"},
            {"udf2": "value2"}, 
            {"custommerchant": "ABC Company"},
            {"customphone": "888-888-8888"}
          ]
    voidable:
      type: string
      maxLength: 1
      example: Y
      description: |
        Indicates whether the transaction can be voided in its current state.

        The <code>voidable</code> value is determined by the status of the batch at the time of inquiry.
        
        If <code>Y</code>, the transaction can be voided.
        
        If <code>N</code>, the transaction cannot be voided.
    inquireMerchantSuccess:
      x-model-version:
      description: inquireMerchant Response
      properties:
        acctupdater:
          $ref: "#/components/schemas/acctupdater"
        avs:
          $ref: "#/components/schemas/avs"
        cardproc:
          $ref: '#/components/schemas/cardproc'
        cvv:
          $ref: '#/components/schemas/cvv'
        echeck:
          $ref: '#/components/schemas/echeck'
        enabled:
          $ref: '#/components/schemas/enabled'
        fee_format:
          $ref: '#/components/schemas/fee_format'
        fee_merchid:
          $ref: '#/components/schemas/fee_merchid'
        fee_type:
          $ref: '#/components/schemas/fee_type'
        fee_value:
          $ref: '#/components/schemas/fee_value'
        merchid:
          description: The MID to validate against the site specified in the request URL.
          example: 496082673999
          $ref: '#/components/schemas/merchid'
        site:
          $ref: '#/components/schemas/site'
    TokenizeSuccess:
      x-model-version: 1.0
      description: Error information
      properties:
        message: {
          description: 'Information specific to a propery or attribute.',
          type: string,
          example: No error
        }
        errorcode: {
          description: 'Error response code from the gateway',
          type: integer
        }
        token: {
          description: 'The created token',
          type: string,
          example: 9417119164771111
        }
    listTerminalsSuccess:
      x-model-version: 1.0
      description: List of terminals
      properties:
        terminals: {
          description: "An array of Hardware Serial Numbers (HSNs) for each terminal for the specified merchant ID.",
          type: array,
          example: { 
              "terminals" : 
             [ 
               "12145SC70108037", 
               "14012PP20131409", 
               "12155SC70113974",
               "12150SC70110741" 
             ] 
            }
        }
    EchoSuccess:
      x-model-version: 1.0
      description: Error information
      properties:
        message: {
          description: 'The message value included in the request. Returns a descriptive error message if the request failed. See Error Codes and Messages for a complete list of possible error codes and messages.',
          type: string,
          example: 'Hello?'
          }
        errorcode: {
          description: 'An error code, if the request encountered an error. Returns "0" if the request was successful. See Error Codes and Messages for a complete list of possible error codes and messages.',
          type: integer
        }
    NotFoundError:
      x-model-version: 1.0
      description: Error information
      properties:
        message: {
          description: 'Information specific to a propery or attribute.',
          type: string,
          example: Data not found
        }
        errorcode: {
          description: 'Error response code from the gateway',
          type: integer,
          example: 49
        }
    BadRequestError:
      x-model-version: 1.0
      description: Error information
      properties:
        message: {
          description: 'Information specific to a propery or attribute.',
          type: string,
          example: Keystore invalid processor
        }
        errorcode: {
          description: 'Error response code from the gateway',
          type: integer,
          example: 65
        }
    ErrorCode: 
      description: An error code. Returns "00" if successful. All error codes contain four digits. Two zeros precede the codes.
      properties:
        code:
          description: An error code that shows the importance of error codes.
          type: integer
    Error:
      x-model-version: 1.0
      description: Error information
      properties:
        type:
          description: 'The type of response either from the HOST, GATEWAY, NETWORK, or APIM.'
          type: string
        code: {
          description: 'Error response code from the host, gateway, or network',
          type: string
        }
        message: {
          description: 'Information specific to a propery or attribute.',
          type: string
        }
    listTerminalsRequest:
      x-model-version: 1.0
      type: object
      properties:
        merchantID:
          description: Your Merchant ID, required for all requests.
          type: string
          maxLength: 16
          example: 1234
    EchoRequest:
      x-model-version: 1.0
      type: object
      properties:
        message:
          description: A message to send in the ping request and receive in the response. The value can be blank, however the message field must be included in the request.
          type: string
          maxLength: 250
          example: Hello?
    TokenizeRequest:
      x-model-version: 1.0
      type: object
      properties:
            account:
              type: string
              maxLength: 19
              description: |
                This field must be one of the following:
                  * A clear or encrypted payment account number (PAN)
                  * An ACH routing and account number string in the format '<routing>/<account>' for eCheck transactions. 
                  If encryptionhandler is provided, the account is treated as an encrypted PAN.
            devicedata:
              type: string
              description: |
                One of the following:
                  * Encrypted track data retrieved using a card reader or terminal device (MSR/EMV/NFC)
                  * Apple Pay payment token data (see the Apple Pay Developer Guide for detailed information)
                  * Google Pay wallet payload (see the Google Pay Developer Guide for detailed information)
            singature:
              type: string
              description: Signature data, if captured. Data must be a Base64-encoded, Gzipped bitmap (BMP). 
            encryptionhandler:
              type: string
              description: |
                One of the following :
                  * For an encrypted PAN or ACH, specify **RSA**
                  * For an Apple Pay payment token, specify **EC_APPLE_PAY**
                  * For a Google Pay wallet payload, specify **EC_GOOGLE_PAY**
            expiry:
              type: integer
              description: |
                Optional, the card expiration date. Must be a numeric string, in one of the following formats:
                  * MMYY
                  * YYYYM (for single-digit months)
                  * YYYYMM
                  * YYYYMMDD
            cvv:
              type: integer
              description: |
                Optional, the 3 or 4 digits card verification value (CVV).
                Must be a 3 or 4 character numeric string; strings greater than 4 characters or fewer than 3 characters are not supported.
                Alphanumeric and special characters are not supported."
            unique:
              type: boolean
              description: |
                Specifies whether a unique token should be generated.
                Specify **true** to generate a unique token.
                Defaults to **false**."
    TokenizeRequestDeviceData:
      x-model-version: 1.0
      description: object
      properties:
        devicedata:
          description: Either track data, ApplePay payment token, or GooglePay wallet payload.,
          example: '2'
        signature: {
          type: string,
          description: Saved image file of signature,
          example: sig
          }
        encryptionhandler: {
          type: string,
          description: Payment acceptance and encryption method.
          }
  responses:
    listTerminalsResponse:
      x-model-version: 1.0
      description: Contains list of terminals associated with MID.
      content:
        terminals:
          example: { 
             [ 
               "12145SC70108037", 
               "14012PP20131409", 
               "12155SC70113974",
               "12150SC70110741" 
             ] 
            }
    TokenizeResponse:
      x-model-version: 1.0
      description: Contains the <a href="path">Gateway Response</a>
      content:
        message: 
          example: 'No Error'
        errorcode:
          example: 000
        token:
          example: 941711916477111
    WrongVersion:
      x-model-version: 1.0
      description: Wrong version number
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    InvalidAction:
      x-model-version: 1.0
      description: Invalid action
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    DataNotDecimal:
      x-model-version: 1.0
      description: Data is not decimal digits
      content:
        application/JSON:
          schema:
            $ref: '#/components/schemas/Error'
    KeyIDNotFound:
      x-model-version: 1.0
      description: Key ID is not found
      content:
        application/JSON:
          schema:
            $ref: '#/components/schemas/Error'
    DataTooLong:
      x-model-version: 1.0
      description: Data is too long
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    DataEmpty:
      x-model-version: 1.0
      description: Data is empty
      content:
        application/JSON:
          schema:
            $ref: '#/components/schemas/Error'
    UnknownAlgo:
      x-model-version: 1.0
      description: Unknown Algorithm
      content:
        application/JSON:
          schema:
            $ref: '#/components/schemas/Error'
    EncryptionFailure:
      x-model-version: 1.0
      description: Encryption Failure
      content:
        application/JSON:
          schema:
            $ref: '#/components/schemas/Error'
    Base64Failure:
      x-model-version: 1.0
      description: Base 64 decode failure
      content:
        application/JSON:
          schema:
            $ref: '#/components/schemas/Error'
    CryptoWrongLength:
      x-model-version: 1.0
      description: Crypto data is the wrong length
      content:
        application/JSON:
          schema:
            $ref: '#/components/schemas/Error'
    DataTooShort:
      x-model-version: 1.0
      description: Data is too short
      content:
        application/JSON:
          schema:
            $ref: '#/components/schemas/Error'
    CCNWrongLength:
      x-model-version: 1.0
      description: CCN wrong length on decryption
      content:
        application/JSON:
          schema:
            $ref: '#/components/schemas/Error'
    DecryptionFailure:
      x-model-version: 1.0
      description: Decryption Failure
      content:
        application/JSON:
          schema:
            $ref: '#/components/schemas/Error'
    BadPadding:
      x-model-version: 1.0
      description: Bad PKCS 5 padding
      content:
        application/JSON:
          schema:
            $ref: '#/components/schemas/Error'
    BadDecrypt:
      description: Bad decryption length field
    KeystoreNotInit:
      description: Keystore not initialized
    ApplicationNotInit:
      x-model-version: 1.0
      description: Application not initialized
      content:
        application/JSON:
          schema:
            $ref: '#/components/schemas/Error'
    BufferTooShort:
      x-model-version: 1.0
      description: Buffer too short
      content:
        application/JSON:
          schema:
            $ref: '#/components/schemas/Error'
    IllegalCharacter:
      x-model-version: 1.0
      description: Illegal characters
      content:
        application/JSON:
          schema:
            $ref: '#/components/schemas/Error'
    WrongLength:
      x-model-version: 1.0
      description: Wrong message length
      content:
        application/JSON:
          schema:
            $ref: '#/components/schemas/Error'
    ServerFailed:
      x-model-version: 1.0
      description: Server failed
      content:
        application/JSON:
          schema:
            $ref: '#/components/schemas/Error'
    ConfigItemBad:
      x-model-version: 1.0
      description: Config item is bad
      content:
        application/JSON:
          schema:
            $ref: '#/components/schemas/Error'
    TokenDataProb:
      x-model-version: 1.0
      description: Token database problem
      content:
        application/JSON:
          schema:
            $ref: '#/components/schemas/Error'
    UnAuthHost:
      x-model-version: 1.0
      description: Unauthorized host
      content:
        application/JSON:
          schema:
            $ref: '#/components/schemas/Error'
    TokenPurged:
      x-model-version: 1.0
      description: Token Purged
      content:
        application/JSON:
          schema:
            $ref: '#/components/schemas/Error'
    DataNotFound:
      x-model-version: 1.0
      description: Data not found
      content:
        application/JSON:
          schema:
            $ref: '#/components/schemas/Error'
    ErrorHashing:
      x-model-version: 1.0
      description: Error hashing the value
      content:
        application/JSON:
          schema:
            $ref: '#/components/schemas/Error'
    TokenDuplicate:
      x-model-version: 1.0
      description: Token or data duplicate
      content:
        application/JSON:
          schema:
            $ref: '#/components/schemas/Error'
    LuhnFailure:
      x-model-version: 1.0
      description: Card number check (Luhn formula) failed
      content:
        application/JSON:
          schema:
            $ref: '#/components/schemas/Error'
    MissingSiteName:
      x-model-version: 1.0
      description: Missing or unknown site name
      content:
        application/JSON:
          schema:
            $ref: '#/components/schemas/Error'
    TokenFormatBad:
      x-model-version: 1.0
      description: Token format is bad
      content:
        application/JSON:
          schema:
            $ref: '#/components/schemas/Error'
    RequestSignatureInvalid:
      x-model-version: 1.0
      description: Request signature is bad
      content:
        application/JSON:
          schema:
            $ref: '#/components/schemas/Error'
    RequestSignatureExpired:
      x-model-version: 1.0
      description: Request signature timestamp expired
      content:
        application/JSON:
          schema:
            $ref: '#/components/schemas/Error'
    RequestSignatureMismatch:
      x-model-version: 1.0
      description: Request signature mismatch
      content:
        application/JSON:
          schema:
            $ref: '#/components/schemas/Error'
    RequestSignatureFailure:
      x-model-version: 1.0
      description: Request signature failure
      content:
        application/JSON:
          schema:
            $ref: '#/components/schemas/Error'
    PINTranslationFail:
      x-model-version: 1.0
      description: PIN translation fail
      content:
        application/JSON:
          schema:
            $ref: '#/components/schemas/Error'
    KeystoreImportFail:
      x-model-version: 1.0
      description: Keystore import failure
      content:
        application/JSON:
          schema:
            $ref: '#/components/schemas/Error'
    KeystoreUserstoreFail:
      x-model-version: 1.0
      description: Keystore userstore failure
      content:
        application/JSON:
          schema:
            $ref: '#/components/schemas/Error'
    KeystoreInvalidProc:
      x-model-version: 1.0
      description: Keystore invalid processor
      content:
        application/JSON:
          schema:
            $ref: '#/components/schemas/Error'
    UnauthTerminal:
      x-model-version: 1.0
      description: Unauthorized terminal
      content:
        application/JSON:
          schema:
            $ref: '#/components/schemas/Error'
    KeystoreRollbackFail:
      x-model-version: 1.0
      description: Keystore rollback failure
      content:
        application/JSON:
          schema:
            $ref: '#/components/schemas/Error'
    UnauthDecrypt:
      x-model-version: 1.0
      description: Unauthorized decrypt
      content:
        application/JSON:
          schema:
            $ref: '#/components/schemas/Error'
    InvalidEMVData:
      x-model-version: 1.0
      description: Invalid EMV tag data
      content:
        application/JSON:
          schema:
            $ref: '#/components/schemas/Error'
    EMVDataEmpty:
      x-model-version: 1.0
      description: EMV tag data empty
      content:
        application/JSON:
          schema:
            $ref: '#/components/schemas/Error'
    MissingReqParam:
      x-model-version: 1.0
      description: Missing required parameter
      content:
        application/JSON:
          schema:
            $ref: '#/components/schemas/Error'
    InvalidEllipticParam:
      x-model-version: 1.0
      description: Invalid elliptic curve type parameter
      content:
        application/JSON:
          schema:
            $ref: '#/components/schemas/Error'
    JSONSerializationError:
      x-model-version: 1.0
      description: JSON serialization error
      content:
        application/JSON:
          schema:
            $ref: '#/components/schemas/Error'
    JSONDeserializationError:
      x-model-version: 1.0
      description: JSON deserialization error
      content:
        application/JSON:
          schema:
            $ref: '#/components/schemas/Error'
    InvalidSwipeData:
      x-model-version: 1.0
      description: Invalid swipe data
      content:
        application/JSON:
          schema:
            $ref: '#/components/schemas/Error'
  examples:
    approvedsurchargeExample:
      value:
        token: CREDIT,
        postal: NOT_RESTRICTED,
        messages: []
    debitcardnotelligible:
      value:
        token: DEBIT,
        postal: UNKNOWN,
        messages: [{"field": "postal", "message": "postal is missing or empty"}]
    missingpostalandtoken:
      value:
        token: UNKNOWN
        postal: UNKNOWN
        messages: [
          {"field": "token", "message": "token is missing or empty"},
          {"field":"postal", "message": "postal is missing or empty"}]
    Successful:
      value:
        errorcode: 0,
        data: "AAdoWZghKq4An1Pl0PJKDQfTQ"
        message: "No error"
    WrongVersion:
      value:
        type: 'integer'
        code: '003'
        message: 'Message'
    listTerminalsExample:
      value:
        merchantID: '1234'
        source:
          sourcetype: listTerminalsRequest
    listTerminalsResponseExample:
      value:
        terminals: { 
          "terminals" : 
           [ 
             "12145SC70108037", 
             "14012PP20131409", 
             "12155SC70113974",
             "12150SC70110741" 
           ] 
          }
    EchoRequestExample:
      value:
        message: 'Hello?'
        source:
          sourcetype: EchoRequest
    EchoResponseExample:
      value:
        message: 'Hello?'
        errorcode: 0
    TokenResponse:
      value:
        message: 'No Error'
        errorcode: 0
        token: 9417119164771111
    PaymentCardRequestExample:
      value:
        account: 4444333322221111
