################################################################################
# Copyrights Â© 2021-2022 Fiserv, Inc. or its affiliates.
# Fiserv is a trademark of Fiserv, Inc.,
# registered or used in the United States and foreign countries,
# and may or may not be registered in your country.
# All trademarks, service marks,
# and trade names referenced in this
# material are the property of their
# respective owners. This work, including its contents
# and programming, is confidential and its use
# is strictly limited. This work is furnished only
# for use by duly authorized licensees of Fiserv, Inc.
# or its affiliates, and their designated agents
# or employees responsible for installation or
# operation of the products. Any other use,
# duplication, or dissemination without the
# prior written consent of Fiserv, Inc.
# or its affiliates is strictly prohibited.
# Except as specified by the agreement under
# which the materials are furnished, Fiserv, Inc.
# and its affiliates do not accept any liabilities
# with respect to the information contained herein
# and are not responsible for any direct, indirect,
# special, consequential or exemplary damages
# resulting from the use of this information.
# No warranties, either express or implied,
# are granted or extended by this work or
# the delivery of this work
################################################################################

openapi: 3.0.2
info:
  title: CardPointe Gateway API Service Endpoints
  description: This API documentation provides technical guidance when utilizing CardPointe Gateway.
  version: 1.0.0
servers:
 - {url: 'DNE', description: Production}
 - {url: 'DNE', description: Sandbox}
paths:
  /cardconnect/rest/inquireMerchant:
    get:
      tags:
        - inquireMerchant Endpoint Definition
      x-group-name: CardPointe Gateway API
      x-proxy-name: inquireMerchant
      x-default-example: PaymentCard
      summary: A GET request to the inquireMerchant endpoint returns information on the merchant account configuration.
      description: |+
        A GET request to the inquireMerchant endpoint returns information on the merchant account configuration. This can be helpful for partners who need to validate their CardPointe merchant IDs or for businesses with merchants operating in multiple locations, to ensure that the merchant ID is boarded to the correct site.
      parameters:
      - in: query
        name: merchid
        required: true
        schema:
          $ref: '#/components/schemas/merchid'
          description: The MID to validate against the site specified in the request URL.
      - in: header
        $ref: '#/components/parameters/ContentTypeHeader'
      responses:
        200: 
          description: Success
          content:
            application/json:
              schema: {$ref: '#/components/schemas/inquireMerchantSuccess'}
        400:
          description: Not Found
          content:
            application/json:
              schema: {$ref: '#/components/schemas/NotFoundError'}
        404:
          description: Bad Request
          content:  
            application/json:
              schema: {$ref: '#/components/schemas/BadRequestError'}
  /cardconnect/rest/surcharge:
    get:
      tags:
        - surcharge Endpoint Definition
      x-group-name: CardPointe Gateway API
      x-proxy-name: surcharge
      x-default-example: PaymentCard
      summary: The surcharge endpoint is used to determine whether a surcharge fee will be applied to a transaction, based on the cardholder's postal code and payment method.
      description: |+ 
        The surcharge endpoint is used to determine whether or not a surcharge fee will be   applied to a transaction, based on the cardholder's postal code and payment method. This allows your application to notify the cardholder of the potential credit card surcharge prior to completing a transaction.
        
        This request does not effect whether a surcharge is applied to a transaction; the CardPointe Gateway automatically applies a surcharge depending on the merchant configuration and the eligibility of the payment account. This request is used only for informational purposes.
      parameters:
      - in: query
        name: merchid
        required: true
        schema:
          $ref: '#/components/schemas/merchid'
          description: The MID to validate against the site specified in the request URL.
      - in: query
        name: postal
        required: false
        schema:
          $ref: '#/components/schemas/postal'
          description: The cardholder's postal code used to verify that hte cardholder's state supports surcharging. Optional if token is specified.
      - in: query
        name: token
        required: false
        schema:
          $ref: '#/components/schemas/token'
      - in: header
        $ref: '#/components/parameters/ContentTypeHeader'
      responses:
        200: 
          description: Success
          content:
            application/json:
              schema: {$ref: '#/components/schemas/inquireMerchantSuccess'}
              examples:
                Approved for Surcharge:
                  $ref: '#/components/examples/approvedsurchargeExample'
                Debit Card not Elligible:
                  $ref: '#/components/examples/debitcardnotelligible'
                Missing Postal and Token:
                  $ref: '#/components/examples/missingpostalandtoken'
        400:
          description: Not Found
          content:
            application/json:
              schema: {$ref: '#/components/schemas/NotFoundError'}
        404:
          description: Bad Request
          content:  
            application/json:
              schema: {$ref: '#/components/schemas/BadRequestError'}
  /cardconnect/rest/auth:
   post:
      tags:
        - auth POST endpoint Definition
      x-group-name: CardPointe Gateway API
      x-proxy-name: auth
      x-default-example: PaymentCard
      summary: |
        Authorization is the initial step in accepting payment from a cardholder. This action "authorizes" or requests permission from the bank to transfer money from the cardholder to the merchant.
      description: |
        Authorization is the initial step in accepting payment from a cardholder. This action "authorizes" or requests permission from the bank to transfer money from the cardholder to the merchant.

        The authorization service supports a <code>PUT</code> or <code>POST</code> request that includes a JSON encoded list of fields defined for the service. The service responds with either an HTTP Exception, if there are errors, or a JSON-encoded response, if the request was successful.

        Within the response, the status of the transaction is described in the respstat value:

        * A - Approved
        * B - Retry
        * C - Declined
      responses:
        200: 
          description: Success
          content:
            application/json:
              schema: {$ref: '#/components/schemas/inquireMerchantSuccess'}
        400:
          description: Not Found
          content:
            application/json:
              schema: {$ref: '#/components/schemas/NotFoundError'}
        404:
          description: Bad Request
          content:  
            application/json:
              schema: {$ref: '#/components/schemas/BadRequestError'}
##   put:
##      tags:
##        - auth PUT Endpoint Definition
##      x-group-name: CardPointe Gateway API
##      x-proxy-name: auth
##      x-default-example: PaymentCard
##      summary: A GET request to the inquireMerchant endpoint returns information on the merchant account configuration.
##      description: |
##        Authorization is the initial step in accepting payment from a cardholder. This action "authorizes" or requests permission from the bank to transfer money from the cardholder to the merchant.

##        The authorization service supports a PUT or POST request that includes a JSON encoded list of fields defined for the service. The service responds with either an HTTP Exception, if there are errors, or a JSON-encoded response, if the request was successful.

##        Within the response, the status of the transaction is described in the respstat value:
##
##        * A - Approved
##        * B - Retry
##        * C - Declined
##      parameters:
##      - in: query
##        name: merchid
##        required: true
##        schema:
##          $ref: '#/components/schemas/merchid'
##          description: The MID to validate against the site specified in the request URL.
##      - in: header
##        $ref: '#/components/parameters/ContentTypeHeader'
##      responses:
##        200: 
##          description: Success
##          content:
##            application/json:
##              schema: {$ref: '#/components/schemas/inquireMerchantSuccess'}
##        400:
##          description: Not Found
##          content:
##            application/json:
##              schema: {$ref: '#/components/schemas/NotFoundError'}
##        404:
##          description: Bad Request
##          content:  
##           application/json:
##              schema: {$ref: '#/components/schemas/BadRequestError'}
  /cardconnect/rest/capture:
    post:
      tags:
        - capture Endpoint Definition
      x-group-name: CardPointe Gateway API
      x-proxy-name: capture
      x-default-example: PaymentCard
      summary: The capture service queues the transaction amount for settlement. Capture can occur within the authorization request or subsequently.
      description: | 
        The capture service uses a <code>PUT</code> or <code>POST</code> method queues the transaction amount for settlement. Capture can occur within the authorization request or subsequently.

        If the amount to be captured is more than the authorized amount (such as a tip adjustment), ensure that the merchant is appropriately entitled with this capability.

        The service responds with either a JSON-encoded response or an HTTP error code. 
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/captureRequest'
      parameters:
        - {$ref: '#/components/parameters/ContentTypeHeader'}
        - {$ref: '#/components/parameters/Authorization'}
      responses:
        200: 
          description: Success
          content:
            application/json:
              schema: {$ref: '#/components/schemas/inquireMerchantSuccess'}
        400:
          description: Not Found
          content:
            application/json:
              schema: {$ref: '#/components/schemas/NotFoundError'}
        404:
          description: Bad Request
          content:  
            application/json:
              schema: {$ref: '#/components/schemas/BadRequestError'}
components:
  parameters:
    Authorization:
      x-model-version: 1.0 
      name: Authorization
      schema: {type: integer, format: int64}
      in: header
      required: true
      description: The Terminal API Authorization Key
    TimestampHeader:
      x-model-version: 1.0
      name: Timestamp
      schema: {type: integer, format: int64}
      in: header
      required: true
      description: Epoch timestamp in milliseconds in the request from a client system.
        Used for authorization header generation and time limit (5 minutes).
    MessageDigestHeader:
      x-model-version: 1.0
      name: Message-Digest
      schema: {
        type: string,
        default: "Message-Digest"
       }
      in: header
      required: false
      description: Needed only from customer browser or app to the API in Hosted Payment
        Page requests.
    AcceptLanguageHeader:
      x-model-version: 1.0
      name: Accept-Language
      schema: {
        type: string,
        default: "Accept-Language"
       }
      in: header
      required: false
      description: The Accept Language header contains information about the language
        preference of a user. This HTTP header is useful to multilingual sites for
        deciding the best language to serve to the client. For example en-US or fr-CA.
    ApiKeyHeader:
      x-model-version: 1.0
      name: Api-Key
      schema: {
        type: string,
        default: "Api-Key"
       }
      in: header
      required: true
      description: API key provided to the merchant associating the requests with the appropriate app in the Developer Portal.
    ContentTypeHeader:
      x-model-version: 1.0
      name: Content-Type
      schema:
        type: string
        enum: [application/json]
        default: application/json
      in: header
      required: true
      description: The content type. Valid value (application/json).
    AccountParam:
      x-model-version: 1.0
      name: account
      schema: {
          type: string,
          default: 4444333322221111
        }
      in: header
      required: false
      description: This field is required only if devicedata is absent. It must contain either a clear or encrypted payment account number (PAN) or an ACH routing and account number string in the format <routing>/<account> for eCheck transactions.
                    If encryptionhandler is provided, the account is treated as an encrypted PAN.
    DeviceDataParam:
      x-model-version: 1.0
      name: devicedata
      schema: {
          type: string
          }
      in: header
      description: This field is required only if account is absent.
    CVVParam:
      x-model-version: 1.0
      name: cvv
      schema: {
          type: number,
        }
      in: header
      description: Card Verification Value (CVV)
    ExpiryParam:
      x-model-version: 1.0
      name: expiry
      schema:
        {
          type: number,
        }
      in: header
      description: Expiration date
    SigParam:
      x-model-version: 1.0
      name: signature
      schema:
        {
          type: string,
        }
      in: header
      description: Signature data is the form of a Base64-encoded, Gzipped bitmap (BMP)
    EncryptHandleParam:
      x-model-version: 1.0
      name: encryptionhandler
      schema:
        {
          type: string,
        }
      in: header
      description: Encryption Handler. Either RSA, EX_APPLE_PAY, EX_GOOGLE_PAY
    UniqueParam:
      x-model-version: 1.0
      name: unique
      schema:
        {
          type: boolean,
        }
      in: header
      description: Specifies whether a unique token should be generated. Defaults to false.
    ErrorCode:
      x-model-version: 1.0
      name: errorcode
      schema:
        type: integer
      in: header
      description: An error code that displays signifying the importance of error codes.
    MessageParam:
      x-model-version: 1.0
      name: message
      schema:
        {
          type: string,
        }
      in: header
      description: A message to send in the ping request and receive in the response. The value can be blank, however the message field must be included in the request.
  schemas:
    avs:
      maxLength: 1
      type: string
      description: | 
        Specifies whether or not AVS validation is enabled for the MID. 
        
        Possible values are:
        * Y
        * N
        
        If Y, the MID can perform $0 authorizations to validate the postal and address values in the auth request.
      example: Y
    authcode:
      maxLength: 16
      type: string
      description: Authorization code from original authorization request
    amount:
      maxLength: 12
      type: integer
      description: Capture amount in decimal or in currency minor units (for example, USD Pennies or MXN centavos)
    captureRequest:
      x-model-version: 1.0
      description: captureRequest
      properties:
        merchid:
          allOf:
            - $ref: '#/components/schemas/merchid'
              proerties:
                required: true
        retref:
          allOf: 
            - $ref: '#/components/schemas/retref'
              properties:
                required: true
        authcode:
          $ref: "#/components/schemas/authcode"
        amount:
          $ref: '#/components/schemas/amount'
        invoiceid:
          $ref: '#/components/schemas/invoiceid'
        receipt:
          $ref: '#/components/schemas/receipt'
    cardproc:
      maxLength: 4
      type: string
      description: The card processor that the MID is configured to use.
      example: RPCT
    cvv:
      maxLength: 1
      type: string
      description: |
        Specifies whether or not CVV validation is enabled for the MID.
        
        Possible values are:

        * Y
        * N
  
        If Y, the MID can perform $0 authorizations to validate the cvv2 value in the auth request.
      example: Y
    echeck:
      maxLength: 1
      type: string
      description: | 
        Specifies whether or not the MID is configured to process eCheck/ACH transactions.

        Possible values are:

        * Y
        * N

        If Y, the MID can perform ACH transactions.
      example: N
    acctupdater:
      maxLength: 1
      type: string
      description: |
        Specifies whether or not the MID is enrolled in the Card Account Updater service.
        
        Possible values are:
        * Y
        * N
      example: N
    enabled:
      type: boolean
      example: true
      description: Specifies whether the MID is currently enabled for use. 
    fee_format:
      type: string
      description: | 
        Specifies the surcharge fee format.
          
        Possible values are:
        
        * <code>flat</code>
        * <code>percent</code>
      example: percent
      maxLength: 7
    fee_merchid:
      type: string
      maxLength: 16
      example: 55555666959
      description: |
        Specifies the linked MID used for processing transactions with surcharge enabled.

        If not applicable, this field is returned as an empty string.
    fee_type: 
      type: string
      example: S
      description: |
        Specifies whether the merchant has convenience or surcharge fees enabled.
        
        Possible values are:
        
        * C - convenience fee
        * F - service fee
        * S - surcharge fee
        * N - none
    fee_value:
      type: integer
      example: 4
      description: |
        Specifies the fee value configured for the MID, where the value is either a percentage or flat amount, used to calculate the fee for each transaction.
    invoiceid:
      maxLength: 12
      type: string
      description: An optional invoice ID
    merchid:
      maxLength: 16
      type: string
    postal:
      maxLength: 9
      type: string
      description: | 
        The cardholder's postal code used to verify that the cardholder's state supports surcharging.

        Optional if token is specified.
    site: 
      type: string
      example: <mid site>
      description: The site that the MID is configured to use.
      maxLength: 12
    receipt:
      type: string
      maxLength: 1
      description: |
          Optional to return <a href="https://www.wikipedia.com/Kenneth_Groninger">receipt data fields</a> in the response.
          
          Specify **Y** to return additional merchant and transaction data to print on a receipt.
          
          Defualts to **N** if not provided.
    retref:
      type: integer
      maxLength: 14
      description: CardPointe retrieval reference number from authorization response
    token: 
      maxLength: 19
      type: integer
      description: | 
        The tokenized account number used to verify that the card type is eligible for surcharging.

        Optional if postal is specified.
    inquireMerchantSuccess:
      x-model-version:
      description: inquireMerchant Response
      properties:
        acctupdater:
          $ref: "#/components/schemas/acctupdater"
        avs:
          $ref: "#/components/schemas/avs"
        cardproc:
          $ref: '#/components/schemas/cardproc'
        cvv:
          $ref: '#/components/schemas/cvv'
        echeck:
          $ref: '#/components/schemas/echeck'
        enabled:
          $ref: '#/components/schemas/enabled'
        fee_format:
          $ref: '#/components/schemas/fee_format'
        fee_merchid:
          $ref: '#/components/schemas/fee_merchid'
        fee_type:
          $ref: '#/components/schemas/fee_type'
        fee_value:
          $ref: '#/components/schemas/fee_value'
        merchid:
          description: The MID to validate against the site specified in the request URL.
          example: 496082673999
          $ref: '#/components/schemas/merchid'
        site:
          $ref: '#/components/schemas/site'
    TokenizeSuccess:
      x-model-version: 1.0
      description: Error information
      properties:
        message: {
          description: 'Information specific to a propery or attribute.',
          type: string,
          example: No error
        }
        errorcode: {
          description: 'Error response code from the gateway',
          type: integer
        }
        token: {
          description: 'The created token',
          type: string,
          example: 9417119164771111
        }
    listTerminalsSuccess:
      x-model-version: 1.0
      description: List of terminals
      properties:
        terminals: {
          description: "An array of Hardware Serial Numbers (HSNs) for each terminal for the specified merchant ID.",
          type: array,
          example: { 
              "terminals" : 
             [ 
               "12145SC70108037", 
               "14012PP20131409", 
               "12155SC70113974",
               "12150SC70110741" 
             ] 
            }
        }
    EchoSuccess:
      x-model-version: 1.0
      description: Error information
      properties:
        message: {
          description: 'The message value included in the request. Returns a descriptive error message if the request failed. See Error Codes and Messages for a complete list of possible error codes and messages.',
          type: string,
          example: 'Hello?'
          }
        errorcode: {
          description: 'An error code, if the request encountered an error. Returns "0" if the request was successful. See Error Codes and Messages for a complete list of possible error codes and messages.',
          type: integer
        }
    NotFoundError:
      x-model-version: 1.0
      description: Error information
      properties:
        message: {
          description: 'Information specific to a propery or attribute.',
          type: string,
          example: Data not found
        }
        errorcode: {
          description: 'Error response code from the gateway',
          type: integer,
          example: 49
        }
    BadRequestError:
      x-model-version: 1.0
      description: Error information
      properties:
        message: {
          description: 'Information specific to a propery or attribute.',
          type: string,
          example: Keystore invalid processor
        }
        errorcode: {
          description: 'Error response code from the gateway',
          type: integer,
          example: 65
        }
    ErrorCode: 
      description: An error code. Returns "00" if successful. All error codes contain four digits. Two zeros precede the codes.
      properties:
        code:
          description: An error code that shows the importance of error codes.
          type: integer
    Error:
      x-model-version: 1.0
      description: Error information
      properties:
        type:
          description: 'The type of response either from the HOST, GATEWAY, NETWORK, or APIM.'
          type: string
        code: {
          description: 'Error response code from the host, gateway, or network',
          type: string
        }
        message: {
          description: 'Information specific to a propery or attribute.',
          type: string
        }
    listTerminalsRequest:
      x-model-version: 1.0
      type: object
      properties:
        merchantID:
          description: Your Merchant ID, required for all requests.
          type: string
          maxLength: 16
          example: 1234
    EchoRequest:
      x-model-version: 1.0
      type: object
      properties:
        message:
          description: A message to send in the ping request and receive in the response. The value can be blank, however the message field must be included in the request.
          type: string
          maxLength: 250
          example: Hello?
    TokenizeRequest:
      x-model-version: 1.0
      type: object
      properties:
            account:
              type: string
              maxLength: 19
              description: |
                This field must be one of the following:
                  * A clear or encrypted payment account number (PAN)
                  * An ACH routing and account number string in the format '<routing>/<account>' for eCheck transactions. 
                  If encryptionhandler is provided, the account is treated as an encrypted PAN.
            devicedata:
              type: string
              description: |
                One of the following:
                  * Encrypted track data retrieved using a card reader or terminal device (MSR/EMV/NFC)
                  * Apple Pay payment token data (see the Apple Pay Developer Guide for detailed information)
                  * Google Pay wallet payload (see the Google Pay Developer Guide for detailed information)
            singature:
              type: string
              description: Signature data, if captured. Data must be a Base64-encoded, Gzipped bitmap (BMP). 
            encryptionhandler:
              type: string
              description: |
                One of the following :
                  * For an encrypted PAN or ACH, specify **RSA**
                  * For an Apple Pay payment token, specify **EC_APPLE_PAY**
                  * For a Google Pay wallet payload, specify **EC_GOOGLE_PAY**
            expiry:
              type: integer
              description: |
                Optional, the card expiration date. Must be a numeric string, in one of the following formats:
                  * MMYY
                  * YYYYM (for single-digit months)
                  * YYYYMM
                  * YYYYMMDD
            cvv:
              type: integer
              description: |
                Optional, the 3 or 4 digits card verification value (CVV).
                Must be a 3 or 4 character numeric string; strings greater than 4 characters or fewer than 3 characters are not supported.
                Alphanumeric and special characters are not supported."
            unique:
              type: boolean
              description: |
                Specifies whether a unique token should be generated.
                Specify **true** to generate a unique token.
                Defaults to **false**."
    TokenizeRequestDeviceData:
      x-model-version: 1.0
      description: object
      properties:
        devicedata:
          description: Either track data, ApplePay payment token, or GooglePay wallet payload.,
          example: '2'
        signature: {
          type: string,
          description: Saved image file of signature,
          example: sig
          }
        encryptionhandler: {
          type: string,
          description: Payment acceptance and encryption method.
          }
  responses:
    listTerminalsResponse:
      x-model-version: 1.0
      description: Contains list of terminals associated with MID.
      content:
        terminals:
          example: { 
             [ 
               "12145SC70108037", 
               "14012PP20131409", 
               "12155SC70113974",
               "12150SC70110741" 
             ] 
            }
    TokenizeResponse:
      x-model-version: 1.0
      description: Contains the <a href="path">Gateway Response</a>
      content:
        message: 
          example: 'No Error'
        errorcode:
          example: 000
        token:
          example: 941711916477111
    WrongVersion:
      x-model-version: 1.0
      description: Wrong version number
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    InvalidAction:
      x-model-version: 1.0
      description: Invalid action
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    DataNotDecimal:
      x-model-version: 1.0
      description: Data is not decimal digits
      content:
        application/JSON:
          schema:
            $ref: '#/components/schemas/Error'
    KeyIDNotFound:
      x-model-version: 1.0
      description: Key ID is not found
      content:
        application/JSON:
          schema:
            $ref: '#/components/schemas/Error'
    DataTooLong:
      x-model-version: 1.0
      description: Data is too long
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    DataEmpty:
      x-model-version: 1.0
      description: Data is empty
      content:
        application/JSON:
          schema:
            $ref: '#/components/schemas/Error'
    UnknownAlgo:
      x-model-version: 1.0
      description: Unknown Algorithm
      content:
        application/JSON:
          schema:
            $ref: '#/components/schemas/Error'
    EncryptionFailure:
      x-model-version: 1.0
      description: Encryption Failure
      content:
        application/JSON:
          schema:
            $ref: '#/components/schemas/Error'
    Base64Failure:
      x-model-version: 1.0
      description: Base 64 decode failure
      content:
        application/JSON:
          schema:
            $ref: '#/components/schemas/Error'
    CryptoWrongLength:
      x-model-version: 1.0
      description: Crypto data is the wrong length
      content:
        application/JSON:
          schema:
            $ref: '#/components/schemas/Error'
    DataTooShort:
      x-model-version: 1.0
      description: Data is too short
      content:
        application/JSON:
          schema:
            $ref: '#/components/schemas/Error'
    CCNWrongLength:
      x-model-version: 1.0
      description: CCN wrong length on decryption
      content:
        application/JSON:
          schema:
            $ref: '#/components/schemas/Error'
    DecryptionFailure:
      x-model-version: 1.0
      description: Decryption Failure
      content:
        application/JSON:
          schema:
            $ref: '#/components/schemas/Error'
    BadPadding:
      x-model-version: 1.0
      description: Bad PKCS 5 padding
      content:
        application/JSON:
          schema:
            $ref: '#/components/schemas/Error'
    BadDecrypt:
      description: Bad decryption length field
    KeystoreNotInit:
      description: Keystore not initialized
    ApplicationNotInit:
      x-model-version: 1.0
      description: Application not initialized
      content:
        application/JSON:
          schema:
            $ref: '#/components/schemas/Error'
    BufferTooShort:
      x-model-version: 1.0
      description: Buffer too short
      content:
        application/JSON:
          schema:
            $ref: '#/components/schemas/Error'
    IllegalCharacter:
      x-model-version: 1.0
      description: Illegal characters
      content:
        application/JSON:
          schema:
            $ref: '#/components/schemas/Error'
    WrongLength:
      x-model-version: 1.0
      description: Wrong message length
      content:
        application/JSON:
          schema:
            $ref: '#/components/schemas/Error'
    ServerFailed:
      x-model-version: 1.0
      description: Server failed
      content:
        application/JSON:
          schema:
            $ref: '#/components/schemas/Error'
    ConfigItemBad:
      x-model-version: 1.0
      description: Config item is bad
      content:
        application/JSON:
          schema:
            $ref: '#/components/schemas/Error'
    TokenDataProb:
      x-model-version: 1.0
      description: Token database problem
      content:
        application/JSON:
          schema:
            $ref: '#/components/schemas/Error'
    UnAuthHost:
      x-model-version: 1.0
      description: Unauthorized host
      content:
        application/JSON:
          schema:
            $ref: '#/components/schemas/Error'
    TokenPurged:
      x-model-version: 1.0
      description: Token Purged
      content:
        application/JSON:
          schema:
            $ref: '#/components/schemas/Error'
    DataNotFound:
      x-model-version: 1.0
      description: Data not found
      content:
        application/JSON:
          schema:
            $ref: '#/components/schemas/Error'
    ErrorHashing:
      x-model-version: 1.0
      description: Error hashing the value
      content:
        application/JSON:
          schema:
            $ref: '#/components/schemas/Error'
    TokenDuplicate:
      x-model-version: 1.0
      description: Token or data duplicate
      content:
        application/JSON:
          schema:
            $ref: '#/components/schemas/Error'
    LuhnFailure:
      x-model-version: 1.0
      description: Card number check (Luhn formula) failed
      content:
        application/JSON:
          schema:
            $ref: '#/components/schemas/Error'
    MissingSiteName:
      x-model-version: 1.0
      description: Missing or unknown site name
      content:
        application/JSON:
          schema:
            $ref: '#/components/schemas/Error'
    TokenFormatBad:
      x-model-version: 1.0
      description: Token format is bad
      content:
        application/JSON:
          schema:
            $ref: '#/components/schemas/Error'
    RequestSignatureInvalid:
      x-model-version: 1.0
      description: Request signature is bad
      content:
        application/JSON:
          schema:
            $ref: '#/components/schemas/Error'
    RequestSignatureExpired:
      x-model-version: 1.0
      description: Request signature timestamp expired
      content:
        application/JSON:
          schema:
            $ref: '#/components/schemas/Error'
    RequestSignatureMismatch:
      x-model-version: 1.0
      description: Request signature mismatch
      content:
        application/JSON:
          schema:
            $ref: '#/components/schemas/Error'
    RequestSignatureFailure:
      x-model-version: 1.0
      description: Request signature failure
      content:
        application/JSON:
          schema:
            $ref: '#/components/schemas/Error'
    PINTranslationFail:
      x-model-version: 1.0
      description: PIN translation fail
      content:
        application/JSON:
          schema:
            $ref: '#/components/schemas/Error'
    KeystoreImportFail:
      x-model-version: 1.0
      description: Keystore import failure
      content:
        application/JSON:
          schema:
            $ref: '#/components/schemas/Error'
    KeystoreUserstoreFail:
      x-model-version: 1.0
      description: Keystore userstore failure
      content:
        application/JSON:
          schema:
            $ref: '#/components/schemas/Error'
    KeystoreInvalidProc:
      x-model-version: 1.0
      description: Keystore invalid processor
      content:
        application/JSON:
          schema:
            $ref: '#/components/schemas/Error'
    UnauthTerminal:
      x-model-version: 1.0
      description: Unauthorized terminal
      content:
        application/JSON:
          schema:
            $ref: '#/components/schemas/Error'
    KeystoreRollbackFail:
      x-model-version: 1.0
      description: Keystore rollback failure
      content:
        application/JSON:
          schema:
            $ref: '#/components/schemas/Error'
    UnauthDecrypt:
      x-model-version: 1.0
      description: Unauthorized decrypt
      content:
        application/JSON:
          schema:
            $ref: '#/components/schemas/Error'
    InvalidEMVData:
      x-model-version: 1.0
      description: Invalid EMV tag data
      content:
        application/JSON:
          schema:
            $ref: '#/components/schemas/Error'
    EMVDataEmpty:
      x-model-version: 1.0
      description: EMV tag data empty
      content:
        application/JSON:
          schema:
            $ref: '#/components/schemas/Error'
    MissingReqParam:
      x-model-version: 1.0
      description: Missing required parameter
      content:
        application/JSON:
          schema:
            $ref: '#/components/schemas/Error'
    InvalidEllipticParam:
      x-model-version: 1.0
      description: Invalid elliptic curve type parameter
      content:
        application/JSON:
          schema:
            $ref: '#/components/schemas/Error'
    JSONSerializationError:
      x-model-version: 1.0
      description: JSON serialization error
      content:
        application/JSON:
          schema:
            $ref: '#/components/schemas/Error'
    JSONDeserializationError:
      x-model-version: 1.0
      description: JSON deserialization error
      content:
        application/JSON:
          schema:
            $ref: '#/components/schemas/Error'
    InvalidSwipeData:
      x-model-version: 1.0
      description: Invalid swipe data
      content:
        application/JSON:
          schema:
            $ref: '#/components/schemas/Error'
  examples:
    approvedsurchargeExample:
      value:
        token: CREDIT,
        postal: NOT_RESTRICTED,
        messages: []
    debitcardnotelligible:
      value:
        token: DEBIT,
        postal: UNKNOWN,
        messages: [{"field": "postal", "message": "postal is missing or empty"}]
    missingpostalandtoken:
      value:
        token: UNKNOWN
        postal: UNKNOWN
        messages: [
          {"field": "token", "message": "token is missing or empty"},
          {"field":"postal", "message": "postal is missing or empty"}]
    Successful:
      value:
        errorcode: 0,
        data: "AAdoWZghKq4An1Pl0PJKDQfTQ"
        message: "No error"
    WrongVersion:
      value:
        type: 'integer'
        code: '003'
        message: 'Message'
    listTerminalsExample:
      value:
        merchantID: '1234'
        source:
          sourcetype: listTerminalsRequest
    listTerminalsResponseExample:
      value:
        terminals: { 
          "terminals" : 
           [ 
             "12145SC70108037", 
             "14012PP20131409", 
             "12155SC70113974",
             "12150SC70110741" 
           ] 
          }
    EchoRequestExample:
      value:
        message: 'Hello?'
        source:
          sourcetype: EchoRequest
    EchoResponseExample:
      value:
        message: 'Hello?'
        errorcode: 0
    TokenResponse:
      value:
        message: 'No Error'
        errorcode: 0
        token: 9417119164771111
    PaymentCardRequestExample:
      value:
        account: 4444333322221111
